{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"[WIP] truzt","text":"<p>Builelib-compatible Data Model using Pydantic.</p>"},{"location":"#data-validation","title":"Data Validation","text":""},{"location":"#serialization","title":"Serialization","text":""},{"location":"#wip-convert-excel-to-json","title":"[WIP] Convert excel to json","text":"<ul> <li>Building -&gt; \u5b9f\u88c5\u6e08</li> <li>Room -&gt; \u5b9f\u88c5\u6e08</li> </ul>"},{"location":"#usage","title":"Usage","text":"<pre><code>import json\n\nfrom truzt.webpro_model import WebproModel\n\n\ndef test_webpro_model_json_serialize():\n    with open(\"sample/sample_input_v3.json\") as file:\n        wm_dict = json.load(file)\n    # WebproModel\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\n    wm = WebproModel.model_validate(wm_dict)\n    # serialize\n    wm_serialized_dict = wm.model_dump(by_alias=True, exclude_unset=True)\n    with open(\"webpro_model.json\", \"w\") as f:\n        json.dump(wm_serialized_dict, f, indent=2, ensure_ascii=False)\n\n\ndef test_invalid_input():\n    with open(\"sample/sample_input_v3.json\") as file:\n        wm_dict = json.load(file)\n        wm_dict[\"Building\"][\"Region\"] = 9  # &lt;- \u5730\u57df\u533a\u5206(1-8)\u306b\u7bc4\u56f2\u5916\u306e\u5024\u3092\u5165\u529b\n    try:\n        wm = WebproModel.model_validate(wm_dict)\n    except ValueError as e:\n        print(e)\n\n\nif __name__ == \"__main__\":\n    test_webpro_model_json_serialize()\n    test_invalid_input()\n</code></pre>"},{"location":"license/","title":"License","text":"<p>MIT License</p> <p>Copyright (c) 2024 Shoji, Yutaka</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"reference/SUMMARY/","title":"SUMMARY","text":"<ul> <li>truzt<ul> <li>air_conditioning_zone_model</li> <li>air_handling_system_model</li> <li>building_model</li> <li>cogeneration_system_model</li> <li>elevator_model</li> <li>envelope_set_model</li> <li>heat_source_system_model</li> <li>hot_water_room_model</li> <li>hot_water_supply_system_model</li> <li>lighting_room_model</li> <li>model_config</li> <li>photovoltaic_system_model</li> <li>room_model</li> <li>secondary_pump_system_model</li> <li>shading_configure_model</li> <li>utils</li> <li>ventilation_room_model</li> <li>ventilation_unit_model</li> <li>wall_configure_model</li> <li>webpro_model</li> <li>webpro_options</li> <li>window_configure_model</li> </ul> </li> </ul>"},{"location":"reference/truzt/","title":"truzt","text":"<p>truzt --Building Data Model--.</p> <pre><code> .-') _   _  .-')                 .-') _  .-') _\n(  OO) ) ( \\( -O )               (  OO) )(  OO) )\n/     '._ ,------. ,--. ,--.   ,(_)----. /     '._\n|'--...__)|   /`. '|  | |  |   |       | |'--...__)\n'--.  .--'|  /  | ||  | | .-') '--.   /  '--.  .--'\n   |  |   |  |_.' ||  |_|( OO )(_/   /      |  |\n   |  |   |  .  '.'|  | | `-' / /   /___    |  |\n   |  |   |  |\\  \\('  '-'(_.-' |        |   |  |\n   `--'   `--' '--' `-----'    `--------'   `--'\n</code></pre>"},{"location":"reference/truzt/air_conditioning_zone_model/","title":"air_conditioning_zone_model","text":"<p>Module for defining the AirConditioningZone model.</p>"},{"location":"reference/truzt/air_conditioning_zone_model/#truzt.air_conditioning_zone_model.AirConditioningZone","title":"<code>AirConditioningZone</code>","text":"<p>               Bases: <code>BaseConfigModel</code></p> <p>Air conditioning zone.</p> <p>Attributes:</p> Name Type Description <code>is_natual_ventilation</code> <p>\u81ea\u7136\u63db\u6c17\u306e\u6709\u7121</p> <code>is_simultaneous_supply</code> <code>Annotated[Literal['\u6709', '\u7121', '\u6709\uff08\u5ba4\u8ca0\u8377\uff09', '\u6709\uff08\u5916\u6c17\u8ca0\u8377\uff09'], Field(alias=isSimultaneousSupply)]</code> <p>\u51b7\u6696\u540c\u6642\u4f9b\u7d66\u306e\u6709\u7121</p> <code>ahu_cooling_inside_load</code> <code>Annotated[str, Field(alias=AHU_cooling_insideLoad)]</code> <p>\u7a7a\u8abf\u6a5f\u7fa4\u540d\u79f0 \u51b7\u623f\u5ba4\u8ca0\u8377\u51e6\u7406</p> <code>ahu_cooling_outdoor_load</code> <code>Annotated[str, Field(alias=AHU_cooling_outdoorLoad)]</code> <p>\u7a7a\u8abf\u6a5f\u7fa4\u540d\u79f0 \u51b7\u623f\u5916\u6c17\u8ca0\u8377\u51e6\u7406</p> <code>ahu_heating_inside_load</code> <code>Annotated[str, Field(alias=AHU_heating_insideLoad)]</code> <p>\u7a7a\u8abf\u6a5f\u7fa4\u540d\u79f0 \u6696\u623f\u5ba4\u8ca0\u8377\u51e6\u7406</p> <code>ahu_heeating_outdoor_load</code> <code>Annotated[str, Field(alias=AHU_heating_outdoorLoad)]</code> <p>\u7a7a\u8abf\u6a5f\u7fa4\u540d\u79f0 \u6696\u623f\u5916\u6c17\u8ca0\u8377\u51e6\u7406</p> <code>info</code> <code>Optional[str]</code> Source code in <code>truzt/air_conditioning_zone_model.py</code> <pre><code>class AirConditioningZone(BaseConfigModel):\n    \"\"\"Air conditioning zone.\n\n    Attributes:\n        is_natual_ventilation: \u81ea\u7136\u63db\u6c17\u306e\u6709\u7121\n        is_simultaneous_supply: \u51b7\u6696\u540c\u6642\u4f9b\u7d66\u306e\u6709\u7121\n        ahu_cooling_inside_load: \u7a7a\u8abf\u6a5f\u7fa4\u540d\u79f0 \u51b7\u623f\u5ba4\u8ca0\u8377\u51e6\u7406\n        ahu_cooling_outdoor_load: \u7a7a\u8abf\u6a5f\u7fa4\u540d\u79f0 \u51b7\u623f\u5916\u6c17\u8ca0\u8377\u51e6\u7406\n        ahu_heating_inside_load: \u7a7a\u8abf\u6a5f\u7fa4\u540d\u79f0 \u6696\u623f\u5ba4\u8ca0\u8377\u51e6\u7406\n        ahu_heeating_outdoor_load: \u7a7a\u8abf\u6a5f\u7fa4\u540d\u79f0 \u6696\u623f\u5916\u6c17\u8ca0\u8377\u51e6\u7406\n        info:\n    \"\"\"\n\n    is_natural_ventilation: Annotated[\n        bool,\n        Field(\n            alias=\"isNatualVentilation\",  # NOTE: builelib \u30bf\u30a4\u30dd\u5bfe\u5fdc\n        ),\n    ]\n\n    is_simultaneous_supply: Annotated[\n        Literal[\n            \"\u6709\",\n            \"\u7121\",\n            \"\u6709\uff08\u5ba4\u8ca0\u8377\uff09\",\n            \"\u6709\uff08\u5916\u6c17\u8ca0\u8377\uff09\",\n        ],\n        Field(\n            alias=\"isSimultaneousSupply\",  # NOTE: for builelib compatibility\n        ),\n    ]\n\n    ahu_cooling_inside_load: Annotated[\n        str,\n        Field(\n            alias=\"AHU_cooling_insideLoad\",  # NOTE: for builelib compatibility\n        ),\n    ]\n    ahu_cooling_outdoor_load: Annotated[\n        str,\n        Field(\n            alias=\"AHU_cooling_outdoorLoad\",  # NOTE: for builelib compatibility\n        ),\n    ]\n    ahu_heating_inside_load: Annotated[\n        str,\n        Field(\n            alias=\"AHU_heating_insideLoad\",  # NOTE: for builelib compatibility\n        ),\n    ]\n\n    ahu_heeating_outdoor_load: Annotated[\n        str,\n        Field(\n            alias=\"AHU_heating_outdoorLoad\",  # NOTE: for builelib compatibility\n        ),\n    ]\n\n    info: Optional[str]\n\n    @field_validator(\"is_natural_ventilation\", mode=\"before\")\n    @classmethod\n    def _convert_to_bool(cls, arg: Union[str, bool]) -&gt; bool:\n        if arg == \"\u6709\":\n            is_natural_ventilation = True\n        elif arg == \"\u7121\":\n            is_natural_ventilation = False\n        elif isinstance(arg, bool):\n            is_natural_ventilation = arg\n        else:\n            raise ValueError(\"is_natural_ventilation must be '\u6709' or '\u7121' or boolean\")\n        return is_natural_ventilation\n\n    @field_serializer(\"is_natural_ventilation\")\n    def _convert_to_str(self, arg: bool) -&gt; Literal[\"\u6709\", \"\u7121\"]:\n        if arg:\n            str_arg = \"\u6709\"\n        else:\n            str_arg = \"\u7121\"\n        return str_arg\n</code></pre>"},{"location":"reference/truzt/air_conditioning_zone_model/#truzt.air_conditioning_zone_model.AirConditioningZones","title":"<code>AirConditioningZones</code>","text":"<p>               Bases: <code>RootModel</code></p> <p>AirConditioningZone dict.</p> <p>Attributes:</p> Name Type Description <code>root</code> <code>dict[str, AirConditioningZone]</code> <p>AirConditioningZone dict.</p> Source code in <code>truzt/air_conditioning_zone_model.py</code> <pre><code>class AirConditioningZones(RootModel):\n    \"\"\"AirConditioningZone dict.\n\n    Attributes:\n        root: AirConditioningZone dict.\n    \"\"\"\n\n    root: dict[str, AirConditioningZone]\n\n    @classmethod\n    def from_workbook(cls, wb: Workbook, ver: Literal[\"v2\", \"v3\"] = \"v3\") -&gt; \"AirConditioningZones\":\n        \"\"\"Create AirConditioningZones instance from workbook.\n\n        Args:\n            wb: WEBPRO input workbook instance.\n            ver: WEBPRO input workbook version (v2 or v3).\n        \"\"\"\n        ws = wb[\"2-1) \u7a7a\u8abf\u30be\u30fc\u30f3\"]\n\n        if ver == \"v2\":\n            address = {\n                \"min_row\": 11,\n                \"floor\": \"H\",\n                \"name\": \"I\",\n                \"info\": \"M\",\n            }\n        elif ver == \"v3\":\n            address = {\n                \"min_row\": 11,\n                \"floor\": \"H\",\n                \"name\": \"I\",\n                # \"is_natural_ventilation\": \"C\",\n                # \"is_simultaneous_supply\": \"D\",\n                \"ahu_cooling_inside_load\": \"J\",\n                \"ahu_cooling_outdoor_load\": \"K\",\n                \"ahu_heating_inside_load\": \"J\",\n                \"ahu_heeating_outdoor_load\": \"K\",\n                \"info\": \"L\",\n            }\n        else:\n            raise ValueError(f\"Invalid version: {ver}\")\n\n        air_conditioning_zones = {}\n        for i_row in range(address[\"min_row\"], 999):\n            # break if the first cell is empty or white space\n            if (\n                ws[f\"{address['floor']}{i_row}\"].value is None\n                or not str(ws[f\"{address['floor']}{i_row}\"].value).strip()\n            ):\n                break\n\n            floor = ws[f\"{address['floor']}{i_row}\"].value\n            name = ws[f\"{address['name']}{i_row}\"].value\n            room_key = f\"{floor}_{name}\"\n\n            air_conditioning_zones[room_key] = AirConditioningZone(\n                is_natural_ventilation=False,\n                is_simultaneous_supply=\"\u7121\",  # TODO: \u66ab\u5b9a\n                ahu_cooling_inside_load=ws[f\"{address['ahu_cooling_inside_load']}{i_row}\"].value,\n                ahu_cooling_outdoor_load=ws[f\"{address['ahu_cooling_outdoor_load']}{i_row}\"].value,\n                ahu_heating_inside_load=ws[f\"{address['ahu_heating_inside_load']}{i_row}\"].value,\n                ahu_heeating_outdoor_load=ws[\n                    f\"{address['ahu_heeating_outdoor_load']}{i_row}\"\n                ].value,\n                info=ws[f\"{address['info']}{i_row}\"].value,\n            )\n\n        return cls(root=air_conditioning_zones)\n</code></pre>"},{"location":"reference/truzt/air_conditioning_zone_model/#truzt.air_conditioning_zone_model.AirConditioningZones.from_workbook","title":"<code>from_workbook(wb, ver='v3')</code>  <code>classmethod</code>","text":"<p>Create AirConditioningZones instance from workbook.</p> <p>Parameters:</p> Name Type Description Default <code>wb</code> <code>Workbook</code> <p>WEBPRO input workbook instance.</p> required <code>ver</code> <code>Literal['v2', 'v3']</code> <p>WEBPRO input workbook version (v2 or v3).</p> <code>'v3'</code> Source code in <code>truzt/air_conditioning_zone_model.py</code> <pre><code>@classmethod\ndef from_workbook(cls, wb: Workbook, ver: Literal[\"v2\", \"v3\"] = \"v3\") -&gt; \"AirConditioningZones\":\n    \"\"\"Create AirConditioningZones instance from workbook.\n\n    Args:\n        wb: WEBPRO input workbook instance.\n        ver: WEBPRO input workbook version (v2 or v3).\n    \"\"\"\n    ws = wb[\"2-1) \u7a7a\u8abf\u30be\u30fc\u30f3\"]\n\n    if ver == \"v2\":\n        address = {\n            \"min_row\": 11,\n            \"floor\": \"H\",\n            \"name\": \"I\",\n            \"info\": \"M\",\n        }\n    elif ver == \"v3\":\n        address = {\n            \"min_row\": 11,\n            \"floor\": \"H\",\n            \"name\": \"I\",\n            # \"is_natural_ventilation\": \"C\",\n            # \"is_simultaneous_supply\": \"D\",\n            \"ahu_cooling_inside_load\": \"J\",\n            \"ahu_cooling_outdoor_load\": \"K\",\n            \"ahu_heating_inside_load\": \"J\",\n            \"ahu_heeating_outdoor_load\": \"K\",\n            \"info\": \"L\",\n        }\n    else:\n        raise ValueError(f\"Invalid version: {ver}\")\n\n    air_conditioning_zones = {}\n    for i_row in range(address[\"min_row\"], 999):\n        # break if the first cell is empty or white space\n        if (\n            ws[f\"{address['floor']}{i_row}\"].value is None\n            or not str(ws[f\"{address['floor']}{i_row}\"].value).strip()\n        ):\n            break\n\n        floor = ws[f\"{address['floor']}{i_row}\"].value\n        name = ws[f\"{address['name']}{i_row}\"].value\n        room_key = f\"{floor}_{name}\"\n\n        air_conditioning_zones[room_key] = AirConditioningZone(\n            is_natural_ventilation=False,\n            is_simultaneous_supply=\"\u7121\",  # TODO: \u66ab\u5b9a\n            ahu_cooling_inside_load=ws[f\"{address['ahu_cooling_inside_load']}{i_row}\"].value,\n            ahu_cooling_outdoor_load=ws[f\"{address['ahu_cooling_outdoor_load']}{i_row}\"].value,\n            ahu_heating_inside_load=ws[f\"{address['ahu_heating_inside_load']}{i_row}\"].value,\n            ahu_heeating_outdoor_load=ws[\n                f\"{address['ahu_heeating_outdoor_load']}{i_row}\"\n            ].value,\n            info=ws[f\"{address['info']}{i_row}\"].value,\n        )\n\n    return cls(root=air_conditioning_zones)\n</code></pre>"},{"location":"reference/truzt/air_handling_system_model/","title":"air_handling_system_model","text":"<p>Module for defining the AirHandlingSystem and AirHandlingUnitItem models.</p>"},{"location":"reference/truzt/air_handling_system_model/#truzt.air_handling_system_model.AirHandlingSystem","title":"<code>AirHandlingSystem</code>","text":"<p>               Bases: <code>BaseConfigModel</code></p> <p>Air handling system.</p> <p>Attributes:</p> Name Type Description <code>is_economizer</code> <code>Optional[bool]</code> <p>\u5916\u6c17\u51b7\u623f\u5236\u5fa1\u306e\u6709\u7121</p> <code>economizer_max_air_volume</code> <code>Optional[float]</code> <p>\u5916\u6c17\u51b7\u623f\u5236\u5fa1 \u6700\u5927</p> <code>is_outdoor_air_cut</code> <code>Optional[bool]</code> <p>\u4e88\u71b1\u6642\u5916\u6c17\u53d6\u5165\u91cf\u5236\u5fa1\u306e\u6709\u7121</p> <code>pump_cooling</code> <code>Optional[str]</code> <p>\u4e8c\u6b21\u30dd\u30f3\u30d7\u7fa4\u540d\u79f0 \u51b7\u623f</p> <code>pump_heating</code> <code>Optional[str]</code> <p>\u4e8c\u6b21\u30dd\u30f3\u30d7\u7fa4\u540d\u79f0 \u6696\u623f</p> <code>heat_source_cooling</code> <code>Optional[str]</code> <p>\u71b1\u6e90\u7fa4\u540d\u79f0 \u51b7\u623f</p> <code>heat_source_heating</code> <code>Optional[str]</code> <p>\u71b1\u6e90\u7fa4\u540d\u79f0 \u6696\u623f</p> <code>air_handling_unit</code> <code>Optional[list[AirHandlingUnitItem]]</code> <p>list of AirHandlingUnitItem</p> Source code in <code>truzt/air_handling_system_model.py</code> <pre><code>class AirHandlingSystem(BaseConfigModel):\n    \"\"\"Air handling system.\n\n    Attributes:\n        is_economizer: \u5916\u6c17\u51b7\u623f\u5236\u5fa1\u306e\u6709\u7121\n        economizer_max_air_volume: \u5916\u6c17\u51b7\u623f\u5236\u5fa1 \u6700\u5927\n        is_outdoor_air_cut: \u4e88\u71b1\u6642\u5916\u6c17\u53d6\u5165\u91cf\u5236\u5fa1\u306e\u6709\u7121\n        pump_cooling: \u4e8c\u6b21\u30dd\u30f3\u30d7\u7fa4\u540d\u79f0 \u51b7\u623f\n        pump_heating: \u4e8c\u6b21\u30dd\u30f3\u30d7\u7fa4\u540d\u79f0 \u6696\u623f\n        heat_source_cooling: \u71b1\u6e90\u7fa4\u540d\u79f0 \u51b7\u623f\n        heat_source_heating: \u71b1\u6e90\u7fa4\u540d\u79f0 \u6696\u623f\n        air_handling_unit: list of AirHandlingUnitItem\n    \"\"\"\n\n    is_economizer: Optional[bool] = Field(\n        None,\n        alias=\"isEconomizer\",  # NOTE: for builelib compatibility\n    )\n    economizer_max_air_volume: Optional[float] = Field(None, ge=0.0)\n    is_outdoor_air_cut: Optional[bool] = Field(\n        None,\n        alias=\"isOutdoorAirCut\",  # NOTE: for builelib compatibility\n    )\n\n    pump_cooling: Optional[str] = Field(\n        None,\n        alias=\"Pump_cooling\",  # NOTE: for builelib compatibility\n    )\n    pump_heating: Optional[str] = Field(\n        None,\n        alias=\"Pump_heating\",  # NOTE: for builelib compatibility\n    )\n\n    heat_source_cooling: Optional[str] = Field(\n        None,\n        alias=\"HeatSource_cooling\",  # NOTE: for builelib compatibility\n    )\n    heat_source_heating: Optional[str] = Field(\n        None,\n        alias=\"HeatSource_heating\",  # NOTE: for builelib compatibility\n    )\n\n    air_handling_unit: Optional[list[AirHandlingUnitItem]] = None\n\n    @field_validator(\"is_economizer\", \"is_outdoor_air_cut\", mode=\"before\")\n    @classmethod\n    def _convert_to_bool(cls, arg: Union[str, bool]) -&gt; bool:\n        if arg == \"\u6709\":\n            arg = True\n        elif arg == \"\u7121\":\n            arg = False\n        elif isinstance(arg, bool):\n            arg = arg\n        else:\n            raise ValueError(\"must be '\u6709' or '\u7121' or boolean\")\n        return arg\n\n    @field_serializer(\"is_economizer\", \"is_outdoor_air_cut\")\n    def _convert_to_str(self, arg: bool) -&gt; Literal[\"\u6709\", \"\u7121\"]:\n        if arg:\n            str_arg = \"\u6709\"\n        else:\n            str_arg = \"\u7121\"\n        return str_arg\n</code></pre>"},{"location":"reference/truzt/air_handling_system_model/#truzt.air_handling_system_model.AirHandlingUnitItem","title":"<code>AirHandlingUnitItem</code>","text":"<p>               Bases: <code>BaseConfigModel</code></p> <p>Air handling unit item.</p> <p>Attributes:</p> Name Type Description <code>type</code> <code>Optional[Literal['\u7a7a\u8abf\u6a5f', 'FCU', '\u9001\u98a8\u6a5f', '\u5ba4\u5185\u6a5f', '\u5168\u71b1\u4ea4\u30e6\u30cb\u30c3\u30c8', '\u653e\u71b1\u5668', '\u5929\u4e95\u653e\u5c04\u51b7\u6696\u623f\u30d1\u30cd\u30eb']]</code> <p>\u69cb\u6210\u6a5f\u7a2e</p> <code>number</code> <code>Optional[int]</code> <p>\u53f0\u6570</p> <code>rated_capacity_cooling</code> <code>Optional[float]</code> <p>\u5b9a\u683c\u80fd\u529b\uff08\u51b7\u623f\uff09</p> <code>rated_capacity_heating</code> <code>Optional[float]</code> <p>\u5b9a\u683c\u80fd\u529b\uff08\u6696\u623f\uff09</p> <code>fan_type</code> <code>Optional[Literal['\u7d66\u6c17', '\u9084\u6c17', '\u5916\u6c17', '\u6392\u6c17', '\u5faa\u74b0', '\u30dd\u30f3\u30d7']]</code> <p>\u9001\u98a8\u6a5f\u7a2e\u985e</p> <code>fan_air_volume</code> <code>Optional[float]</code> <p>\u8a2d\u8a08\u98a8\u91cf</p> <code>fan_power_consumption</code> <code>Optional[float]</code> <p>\u5b9a\u683c\u6d88\u8cbb\u96fb\u529b</p> <code>fan_control_type</code> <code>Optional[Literal['\u7121', '\u5b9a\u98a8\u91cf\u5236\u5fa1', '\u56de\u8ee2\u6570\u5236\u5fa1']]</code> <p>\u98a8\u91cf\u5236\u5fa1\u65b9\u5f0f</p> <code>fan_min_opening_rate</code> <code>Optional[float]</code> <p>\u6700\u5c0f\u98a8\u91cf\u6bd4</p> <code>air_heat_exchange_ratio_cooling</code> <code>Optional[float]</code> <p>\u5168\u71b1\u4ea4\u63db\u52b9\u7387 \u51b7\u623f\u6642</p> <code>air_heat_exchange_ratio_heating</code> <code>Optional[float]</code> <p>\u5168\u71b1\u4ea4\u63db\u52b9\u7387 \u6696\u623f\u6642</p> <code>air_heat_exchanger_effective_air_volume_ratio</code> <code>Optional[float]</code> <p>\u5168\u71b1\u4ea4\u63db\u5668 \u6709\u52b9\u63db\u6c17\u91cf\u7387</p> <code>air_heat_exchanger_control</code> <code>Optional[bool]</code> <p>\u81ea\u52d5\u63db\u6c17\u5207\u66ff\u6a5f\u80fd\u306e\u6709\u7121</p> <code>air_heat_exchanger_power_consumption</code> <code>Optional[float]</code> <p>\u30ed\u30fc\u30bf\u30fc\u56de\u8ee2\u7528\u96fb\u52d5\u6a5f\u6d88\u8cbb\u96fb\u529b</p> <code>is_air_heat_exchanger</code> <code>Optional[Literal['\u6709', '\u7121', '\u5168\u71b1\u4ea4\u63db\u5668\u7121\u3057', '\u5168\u71b1\u4ea4\u63db\u5668\u3042\u308a\u30fb\u69d8\u5f0f2-9\u8a18\u8f09\u7121\u3057', '\u5168\u71b1\u4ea4\u63db\u5668\u3042\u308a\u30fb\u69d8\u5f0f2-9\u8a18\u8f09\u3042\u308a']]</code> <p>\u5168\u71b1\u4ea4\u63db\u5668\u306e\u6709\u7121</p> <code>air_heat_exchanger_name</code> <code>Optional[str]</code> <p>\u5168\u71b1\u4ea4\u63db\u5668\u540d\u79f0</p> <code>info</code> <code>Optional[str]</code> <p>\u5099\u8003</p> Source code in <code>truzt/air_handling_system_model.py</code> <pre><code>class AirHandlingUnitItem(BaseConfigModel):\n    \"\"\"Air handling unit item.\n\n    Attributes:\n        type: \u69cb\u6210\u6a5f\u7a2e\n        number: \u53f0\u6570\n        rated_capacity_cooling: \u5b9a\u683c\u80fd\u529b\uff08\u51b7\u623f\uff09\n        rated_capacity_heating: \u5b9a\u683c\u80fd\u529b\uff08\u6696\u623f\uff09\n        fan_type: \u9001\u98a8\u6a5f\u7a2e\u985e\n        fan_air_volume: \u8a2d\u8a08\u98a8\u91cf\n        fan_power_consumption: \u5b9a\u683c\u6d88\u8cbb\u96fb\u529b\n        fan_control_type: \u98a8\u91cf\u5236\u5fa1\u65b9\u5f0f\n        fan_min_opening_rate: \u6700\u5c0f\u98a8\u91cf\u6bd4\n        air_heat_exchange_ratio_cooling: \u5168\u71b1\u4ea4\u63db\u52b9\u7387 \u51b7\u623f\u6642\n        air_heat_exchange_ratio_heating: \u5168\u71b1\u4ea4\u63db\u52b9\u7387 \u6696\u623f\u6642\n        air_heat_exchanger_effective_air_volume_ratio: \u5168\u71b1\u4ea4\u63db\u5668 \u6709\u52b9\u63db\u6c17\u91cf\u7387\n        air_heat_exchanger_control: \u81ea\u52d5\u63db\u6c17\u5207\u66ff\u6a5f\u80fd\u306e\u6709\u7121\n        air_heat_exchanger_power_consumption: \u30ed\u30fc\u30bf\u30fc\u56de\u8ee2\u7528\u96fb\u52d5\u6a5f\u6d88\u8cbb\u96fb\u529b\n        is_air_heat_exchanger: \u5168\u71b1\u4ea4\u63db\u5668\u306e\u6709\u7121\n        air_heat_exchanger_name: \u5168\u71b1\u4ea4\u63db\u5668\u540d\u79f0\n        info: \u5099\u8003\n    \"\"\"\n\n    type: Optional[\n        Literal[\n            \"\u7a7a\u8abf\u6a5f\",\n            \"FCU\",\n            \"\u9001\u98a8\u6a5f\",\n            \"\u5ba4\u5185\u6a5f\",\n            \"\u5168\u71b1\u4ea4\u30e6\u30cb\u30c3\u30c8\",\n            \"\u653e\u71b1\u5668\",\n            \"\u5929\u4e95\u653e\u5c04\u51b7\u6696\u623f\u30d1\u30cd\u30eb\",\n        ]\n    ] = None\n    number: Optional[int] = Field(None, gt=0)\n    rated_capacity_cooling: Optional[float] = Field(None, gt=0)\n    rated_capacity_heating: Optional[float] = Field(None, ge=0)\n    fan_type: Optional[\n        Literal[\n            \"\u7d66\u6c17\",\n            \"\u9084\u6c17\",\n            \"\u5916\u6c17\",\n            \"\u6392\u6c17\",\n            \"\u5faa\u74b0\",\n            \"\u30dd\u30f3\u30d7\",\n        ]\n    ] = None\n    fan_air_volume: Optional[float] = Field(None, gt=0)\n    fan_power_consumption: Optional[float] = Field(None, gt=0)\n    fan_control_type: Optional[\n        Literal[\n            \"\u7121\",\n            \"\u5b9a\u98a8\u91cf\u5236\u5fa1\",\n            \"\u56de\u8ee2\u6570\u5236\u5fa1\",\n        ]\n    ] = None\n    fan_min_opening_rate: Optional[float] = Field(None, ge=0)\n    air_heat_exchange_ratio_cooling: Optional[float] = Field(None, ge=0)\n    air_heat_exchange_ratio_heating: Optional[float] = Field(None, ge=0)\n    air_heat_exchanger_effective_air_volume_ratio: Optional[float] = Field(None, ge=0)\n    air_heat_exchanger_control: Optional[bool] = None\n    air_heat_exchanger_power_consumption: Optional[float] = Field(None, ge=0)\n\n    is_air_heat_exchanger: Optional[\n        Literal[\n            \"\u6709\",\n            \"\u7121\",\n            \"\u5168\u71b1\u4ea4\u63db\u5668\u7121\u3057\",\n            \"\u5168\u71b1\u4ea4\u63db\u5668\u3042\u308a\u30fb\u69d8\u5f0f2-9\u8a18\u8f09\u7121\u3057\",\n            \"\u5168\u71b1\u4ea4\u63db\u5668\u3042\u308a\u30fb\u69d8\u5f0f2-9\u8a18\u8f09\u3042\u308a\",\n        ]\n    ] = Field(\n        None,\n        alias=\"isAirHeatExchanger\",  # NOTE: for builelib compatibility\n    )\n    air_heat_exchanger_name: Optional[str] = Field(\n        None,\n        alias=\"AirHeatExchanger_name\",  # NOTE: for builelib compatibility\n    )\n\n    info: Optional[str] = None\n\n    @field_validator(\"air_heat_exchanger_control\", mode=\"before\")\n    @classmethod\n    def _convert_to_bool(cls, arg: Union[str, bool]) -&gt; bool:\n        if arg == \"\u6709\":\n            arg = True\n        elif arg == \"\u7121\":\n            arg = False\n        elif isinstance(arg, bool):\n            arg = arg\n        else:\n            raise ValueError(\"must be '\u6709' or '\u7121' or boolean\")\n        return arg\n\n    @field_serializer(\"air_heat_exchanger_control\")\n    def _convert_to_str(self, arg: bool) -&gt; Literal[\"\u6709\", \"\u7121\"]:\n        if arg:\n            str_arg = \"\u6709\"\n        else:\n            str_arg = \"\u7121\"\n        return str_arg\n</code></pre>"},{"location":"reference/truzt/building_model/","title":"building_model","text":"<p>Module for defining the Building model and related classes.</p>"},{"location":"reference/truzt/building_model/#truzt.building_model.Building","title":"<code>Building</code>","text":"<p>               Bases: <code>BaseConfigModel</code></p> <p>Building info.</p> <p>Attributes:</p> Name Type Description <code>name</code> <code>str</code> <p>\u5efa\u7bc9\u7269\u306e\u540d\u79f0</p> <code>building_address</code> <code>Optional[BuildingAddress]</code> <p>\u5efa\u7bc9\u7269\u6240\u5728\u5730</p> <code>region</code> <code>int</code> <p>\u5730\u57df\u306e\u533a\u5206</p> <code>annual_solar_region</code> <code>Literal['A1', 'A2', 'A3', 'A4', 'A5']</code> <p>\u5e74\u9593\u65e5\u5c04\u5730</p> <code>building_floor_area</code> <code>float</code> <p>\u5ef6\u3079\u9762\u7a4d (m2)</p> <code>coefficient_dhc</code> <code>Annotated[Optional[CoefficientDHC], Field(alias=Coefficient_DHC)]</code> <p>\u300c\u4ed6\u4eba\u304b\u3089\u4f9b\u7d66\u3055\u308c\u305f\u71b1\u300d\u306e\u4e00\u6b21\u30a8\u30cd\u30eb\u30ae\u30fc\u63db\u7b97\u4fc2\u6570</p> Source code in <code>truzt/building_model.py</code> <pre><code>class Building(BaseConfigModel):\n    \"\"\"Building info.\n\n    Attributes:\n        name: \u5efa\u7bc9\u7269\u306e\u540d\u79f0\n        building_address: \u5efa\u7bc9\u7269\u6240\u5728\u5730\n        region: \u5730\u57df\u306e\u533a\u5206\n        annual_solar_region: \u5e74\u9593\u65e5\u5c04\u5730\n        building_floor_area: \u5ef6\u3079\u9762\u7a4d (m2)\n        coefficient_dhc: \u300c\u4ed6\u4eba\u304b\u3089\u4f9b\u7d66\u3055\u308c\u305f\u71b1\u300d\u306e\u4e00\u6b21\u30a8\u30cd\u30eb\u30ae\u30fc\u63db\u7b97\u4fc2\u6570\n    \"\"\"\n\n    name: str = \"Hill Valley High School\"\n\n    building_address: Optional[BuildingAddress]\n\n    region: int = Field(ge=1, le=8)\n\n    annual_solar_region: Literal[\n        \"A1\",\n        \"A2\",\n        \"A3\",\n        \"A4\",\n        \"A5\",\n    ]\n\n    building_floor_area: float = Field(ge=0)\n\n    coefficient_dhc: Annotated[\n        Optional[CoefficientDHC],\n        Field(\n            alias=\"Coefficient_DHC\",  # for builelib compatibility\n        ),\n    ] = None\n\n    @field_serializer(\"region\")\n    def _serialize_region(self, region: int) -&gt; str:\n        return str(region)\n\n    @classmethod\n    def from_workbook(cls, wb: Workbook, ver: Literal[\"v2\", \"v3\"] = \"v3\") -&gt; \"Building\":\n        \"\"\"Create Building instance from workbook.\n\n        Args:\n            wb: WEBPRO input workbook instance.\n            ver: WEBPRO input workbook version (v2 or v3).\n        \"\"\"\n        ws = wb[\"0) \u57fa\u672c\u60c5\u5831\"]\n\n        if ver == \"v2\":\n            address = {\n                \"name\": \"C9\",\n                \"region\": \"C12\",\n                \"building_address\": {\n                    \"prefecture\": \"D10\",\n                    \"city\": \"F10\",\n                    \"address\": \"C11\",\n                },\n                \"building_floor_area\": \"C17\",\n                \"annual_solar_region\": \"C18\",\n                \"coefficient_dhc\": {\n                    \"cooling\": \"C19\",\n                    \"heating\": \"C20\",\n                },\n            }\n        elif ver == \"v3\":\n            address = {\n                \"name\": \"C9\",\n                \"region\": \"C12\",\n                \"building_address\": {\n                    \"prefecture\": \"D10\",\n                    \"city\": \"F10\",\n                    \"address\": \"C11\",\n                },\n                \"building_floor_area\": \"C17\",\n                \"annual_solar_region\": \"C18\",\n                \"coefficient_dhc\": {\n                    \"cooling\": \"C19\",\n                    \"heating\": \"C20\",\n                },\n            }\n        else:\n            raise ValueError(f\"Invalid version: {ver}\")\n\n        name = ws[str(address[\"name\"])].value\n\n        building_address = BuildingAddress(\n            prefecture=ws[str(address[\"building_address\"][\"prefecture\"])].value,\n            city=ws[str(address[\"building_address\"][\"city\"])].value,\n            address=ws[str(address[\"building_address\"][\"address\"])].value,\n        )\n\n        region = ws[str(address[\"region\"])].value\n\n        building_floor_area = ws[str(address[\"building_floor_area\"])].value\n\n        annual_solar_region = ws[str(address[\"annual_solar_region\"])].value\n\n        coefficient_dhc = CoefficientDHC(\n            cooling=ws[str(address[\"coefficient_dhc\"][\"cooling\"])].value,\n            heating=ws[str(address[\"coefficient_dhc\"][\"heating\"])].value,\n        )\n\n        return cls(\n            name=name,\n            building_address=building_address,\n            region=region,\n            annual_solar_region=annual_solar_region,\n            building_floor_area=building_floor_area,\n            coefficient_dhc=coefficient_dhc,\n        )\n</code></pre>"},{"location":"reference/truzt/building_model/#truzt.building_model.Building.from_workbook","title":"<code>from_workbook(wb, ver='v3')</code>  <code>classmethod</code>","text":"<p>Create Building instance from workbook.</p> <p>Parameters:</p> Name Type Description Default <code>wb</code> <code>Workbook</code> <p>WEBPRO input workbook instance.</p> required <code>ver</code> <code>Literal['v2', 'v3']</code> <p>WEBPRO input workbook version (v2 or v3).</p> <code>'v3'</code> Source code in <code>truzt/building_model.py</code> <pre><code>@classmethod\ndef from_workbook(cls, wb: Workbook, ver: Literal[\"v2\", \"v3\"] = \"v3\") -&gt; \"Building\":\n    \"\"\"Create Building instance from workbook.\n\n    Args:\n        wb: WEBPRO input workbook instance.\n        ver: WEBPRO input workbook version (v2 or v3).\n    \"\"\"\n    ws = wb[\"0) \u57fa\u672c\u60c5\u5831\"]\n\n    if ver == \"v2\":\n        address = {\n            \"name\": \"C9\",\n            \"region\": \"C12\",\n            \"building_address\": {\n                \"prefecture\": \"D10\",\n                \"city\": \"F10\",\n                \"address\": \"C11\",\n            },\n            \"building_floor_area\": \"C17\",\n            \"annual_solar_region\": \"C18\",\n            \"coefficient_dhc\": {\n                \"cooling\": \"C19\",\n                \"heating\": \"C20\",\n            },\n        }\n    elif ver == \"v3\":\n        address = {\n            \"name\": \"C9\",\n            \"region\": \"C12\",\n            \"building_address\": {\n                \"prefecture\": \"D10\",\n                \"city\": \"F10\",\n                \"address\": \"C11\",\n            },\n            \"building_floor_area\": \"C17\",\n            \"annual_solar_region\": \"C18\",\n            \"coefficient_dhc\": {\n                \"cooling\": \"C19\",\n                \"heating\": \"C20\",\n            },\n        }\n    else:\n        raise ValueError(f\"Invalid version: {ver}\")\n\n    name = ws[str(address[\"name\"])].value\n\n    building_address = BuildingAddress(\n        prefecture=ws[str(address[\"building_address\"][\"prefecture\"])].value,\n        city=ws[str(address[\"building_address\"][\"city\"])].value,\n        address=ws[str(address[\"building_address\"][\"address\"])].value,\n    )\n\n    region = ws[str(address[\"region\"])].value\n\n    building_floor_area = ws[str(address[\"building_floor_area\"])].value\n\n    annual_solar_region = ws[str(address[\"annual_solar_region\"])].value\n\n    coefficient_dhc = CoefficientDHC(\n        cooling=ws[str(address[\"coefficient_dhc\"][\"cooling\"])].value,\n        heating=ws[str(address[\"coefficient_dhc\"][\"heating\"])].value,\n    )\n\n    return cls(\n        name=name,\n        building_address=building_address,\n        region=region,\n        annual_solar_region=annual_solar_region,\n        building_floor_area=building_floor_area,\n        coefficient_dhc=coefficient_dhc,\n    )\n</code></pre>"},{"location":"reference/truzt/building_model/#truzt.building_model.BuildingAddress","title":"<code>BuildingAddress</code>","text":"<p>               Bases: <code>BaseConfigModel</code></p> <p>Building Address.</p> <p>Attributes:</p> Name Type Description <code>prefecture</code> <code>Optional[str]</code> <p>\u90fd\u9053\u5e9c\u770c</p> <code>city</code> <code>Optional[str]</code> <p>\u5e02\u533a\u753a\u6751</p> <code>address</code> <code>Optional[str]</code> <p>\u4e01\u76ee\u3001\u756a\u5730</p> Source code in <code>truzt/building_model.py</code> <pre><code>class BuildingAddress(BaseConfigModel):\n    \"\"\"Building Address.\n\n    Attributes:\n        prefecture: \u90fd\u9053\u5e9c\u770c\n        city: \u5e02\u533a\u753a\u6751\n        address: \u4e01\u76ee\u3001\u756a\u5730\n    \"\"\"\n\n    prefecture: Optional[str]\n    city: Optional[str]\n    address: Optional[str]\n</code></pre>"},{"location":"reference/truzt/building_model/#truzt.building_model.CoefficientDHC","title":"<code>CoefficientDHC</code>","text":"<p>               Bases: <code>BaseConfigModel</code></p> <p>Coefficient DHC.</p> <p>Attributes:</p> Name Type Description <code>cooling</code> <code>Optional[float]</code> <p>\u51b7\u71b1</p> <code>heating</code> <code>Optional[float]</code> <p>\u6e29\u71b1</p> Source code in <code>truzt/building_model.py</code> <pre><code>class CoefficientDHC(BaseConfigModel):\n    \"\"\"Coefficient DHC.\n\n    Attributes:\n        cooling: \u51b7\u71b1\n        heating: \u6e29\u71b1\n    \"\"\"\n\n    cooling: Optional[float] = Field(ge=0)\n    heating: Optional[float] = Field(ge=0)\n</code></pre>"},{"location":"reference/truzt/cogeneration_system_model/","title":"cogeneration_system_model","text":"<p>Module for defining the CogenerationSystem model.</p>"},{"location":"reference/truzt/cogeneration_system_model/#truzt.cogeneration_system_model.CogenerationSystem","title":"<code>CogenerationSystem</code>","text":"<p>               Bases: <code>BaseConfigModel</code></p> <p>Cogeneration system.</p> <p>Attributes:</p> Name Type Description <code>rated_capacity</code> <code>Optional[float]</code> <p>\u5b9a\u683c\u767a\u96fb\u51fa\u529b (kW)</p> <code>number</code> <code>Optional[int]</code> <p>\u53f0\u6570</p> <code>power_generation_efficiency_100</code> <code>Optional[float]</code> <p>\u767a\u96fb\u52b9\u7387 \u8ca0\u8377\u73871.00</p> <code>power_generation_efficiency_75</code> <code>Optional[float]</code> <p>\u767a\u96fb\u52b9\u7387 \u8ca0\u8377\u73870.75</p> <code>power_generation_efficiency_50</code> <code>Optional[float]</code> <p>\u767a\u96fb\u52b9\u7387 \u8ca0\u8377\u73870.50</p> <code>heat_generation_efficiency_100</code> <code>Optional[float]</code> <p>\u6392\u71b1\u52b9\u7387 \u8ca0\u8377\u73871.00</p> <code>heat_generation_efficiency_75</code> <code>Optional[float]</code> <p>\u6392\u71b1\u52b9\u7387 \u8ca0\u8377\u73870.75</p> <code>heat_generation_efficiency_50</code> <code>Optional[float]</code> <p>\u6392\u71b1\u52b9\u7387 \u8ca0\u8377\u73870.50</p> <code>heat_recovery_priority_cooling</code> <code>Optional[Literal['1\u756a\u76ee', '2\u756a\u76ee', '3\u756a\u76ee']]</code> <p>\u6392\u71b1\u5229\u7528\u512a\u5148\u9806\u4f4d \u7a7a\u8abf\u51b7\u71b1\u6e90</p> <code>heat_recovery_priority_heating</code> <code>Optional[Literal['1\u756a\u76ee', '2\u756a\u76ee', '3\u756a\u76ee']]</code> <p>\u6392\u71b1\u5229\u7528\u512a\u5148\u9806\u4f4d \u7a7a\u8abf\u6e29\u71b1\u6e90</p> <code>heat_recovery_priority_hot_water</code> <code>Optional[Literal['1\u756a\u76ee', '2\u756a\u76ee', '3\u756a\u76ee']]</code> <p>\u6392\u71b1\u5229\u7528\u512a\u5148\u9806\u4f4d \u7d66\u6e6f</p> <code>is_24hour_operation</code> <code>Optional[bool]</code> <p>24\u6642\u9593\u904b\u8ee2\u306e\u6709\u7121</p> <code>cooling_system</code> <code>Optional[str]</code> <p>\u6392\u71b1\u5229\u7528\u7cfb\u7d71 \u7a7a\u8abf \u51b7\u71b1</p> <code>heating_system</code> <code>Optional[str]</code> <p>\u6392\u71b1\u5229\u7528\u7cfb\u7d71 \u7a7a\u8abf \u6e29\u71b1</p> <code>hot_water_system</code> <code>Optional[str]</code> <p>\u6392\u71b1\u5229\u7528\u7cfb\u7d71 \u7d66\u6e6f</p> <code>info</code> <code>Optional[str]</code> <p>\u5099\u8003</p> Source code in <code>truzt/cogeneration_system_model.py</code> <pre><code>class CogenerationSystem(BaseConfigModel):\n    \"\"\"Cogeneration system.\n\n    Attributes:\n        rated_capacity: \u5b9a\u683c\u767a\u96fb\u51fa\u529b (kW)\n        number: \u53f0\u6570\n        power_generation_efficiency_100: \u767a\u96fb\u52b9\u7387 \u8ca0\u8377\u73871.00\n        power_generation_efficiency_75: \u767a\u96fb\u52b9\u7387 \u8ca0\u8377\u73870.75\n        power_generation_efficiency_50: \u767a\u96fb\u52b9\u7387 \u8ca0\u8377\u73870.50\n        heat_generation_efficiency_100: \u6392\u71b1\u52b9\u7387 \u8ca0\u8377\u73871.00\n        heat_generation_efficiency_75: \u6392\u71b1\u52b9\u7387 \u8ca0\u8377\u73870.75\n        heat_generation_efficiency_50: \u6392\u71b1\u52b9\u7387 \u8ca0\u8377\u73870.50\n        heat_recovery_priority_cooling: \u6392\u71b1\u5229\u7528\u512a\u5148\u9806\u4f4d \u7a7a\u8abf\u51b7\u71b1\u6e90\n        heat_recovery_priority_heating: \u6392\u71b1\u5229\u7528\u512a\u5148\u9806\u4f4d \u7a7a\u8abf\u6e29\u71b1\u6e90\n        heat_recovery_priority_hot_water: \u6392\u71b1\u5229\u7528\u512a\u5148\u9806\u4f4d \u7d66\u6e6f\n        is_24hour_operation: 24\u6642\u9593\u904b\u8ee2\u306e\u6709\u7121\n        cooling_system: \u6392\u71b1\u5229\u7528\u7cfb\u7d71 \u7a7a\u8abf \u51b7\u71b1\n        heating_system: \u6392\u71b1\u5229\u7528\u7cfb\u7d71 \u7a7a\u8abf \u6e29\u71b1\n        hot_water_system: \u6392\u71b1\u5229\u7528\u7cfb\u7d71 \u7d66\u6e6f\n        info: \u5099\u8003\n    \"\"\"\n\n    rated_capacity: Optional[float] = Field(None, gt=0.0)\n    number: Optional[int] = Field(None, gt=0)\n    power_generation_efficiency_100: Optional[float] = Field(\n        None,\n        gt=0.0,\n        le=1.0,\n        alias=\"PowerGenerationEfficiency_100\",\n    )\n    power_generation_efficiency_75: Optional[float] = Field(\n        None,\n        gt=0.0,\n        le=1.0,\n        alias=\"PowerGenerationEfficiency_75\",\n    )\n    power_generation_efficiency_50: Optional[float] = Field(\n        None,\n        gt=0.0,\n        le=1.0,\n        alias=\"PowerGenerationEfficiency_50\",\n    )\n    heat_generation_efficiency_100: Optional[float] = Field(\n        None,\n        gt=0.0,\n        le=1.0,\n        alias=\"HeatGenerationEfficiency_100\",\n    )\n    heat_generation_efficiency_75: Optional[float] = Field(\n        None,\n        gt=0.0,\n        le=1.0,\n        alias=\"HeatGenerationEfficiency_75\",\n    )\n    heat_generation_efficiency_50: Optional[float] = Field(\n        None,\n        gt=0.0,\n        le=1.0,\n        alias=\"HeatGenerationEfficiency_50\",\n    )\n    heat_recovery_priority_cooling: Optional[\n        Literal[\n            \"1\u756a\u76ee\",\n            \"2\u756a\u76ee\",\n            \"3\u756a\u76ee\",\n        ]\n    ] = None\n    heat_recovery_priority_heating: Optional[\n        Literal[\n            \"1\u756a\u76ee\",\n            \"2\u756a\u76ee\",\n            \"3\u756a\u76ee\",\n        ]\n    ] = None\n    heat_recovery_priority_hot_water: Optional[\n        Literal[\n            \"1\u756a\u76ee\",\n            \"2\u756a\u76ee\",\n            \"3\u756a\u76ee\",\n        ]\n    ] = None\n    is_24hour_operation: Optional[bool] = Field(\n        None,\n        alias=\"24hourOperation\",\n    )\n    cooling_system: Optional[str] = None\n    heating_system: Optional[str] = None\n    hot_water_system: Optional[str] = Field(\n        None,\n        alias=\"HowWaterSystem\",  # NOTE: builelib\u306e\u30bf\u30a4\u30dd\u5bfe\u5fdc\n    )\n    info: Optional[str] = None\n\n    @field_validator(\"is_24hour_operation\", mode=\"before\")\n    @classmethod\n    def _convert_to_bool(cls, arg: Union[str, bool]) -&gt; bool:\n        if arg == \"\u6709\":\n            arg = True\n        elif arg == \"\u7121\":\n            arg = False\n        elif isinstance(arg, bool):\n            arg = arg\n        else:\n            raise ValueError(\"must be '\u6709' or '\u7121' or boolean\")\n        return arg\n\n    @field_serializer(\"is_24hour_operation\")\n    def _convert_to_str(self, arg: bool) -&gt; Literal[\"\u6709\", \"\u7121\"]:\n        if arg:\n            str_arg = \"\u6709\"\n        else:\n            str_arg = \"\u7121\"\n        return str_arg\n</code></pre>"},{"location":"reference/truzt/elevator_model/","title":"elevator_model","text":"<p>Module for defining the ElevatorItem and Elevators models.</p>"},{"location":"reference/truzt/elevator_model/#truzt.elevator_model.ElevatorItem","title":"<code>ElevatorItem</code>","text":"<p>               Bases: <code>BaseConfigModel</code></p> <p>Elevaror item.</p> <p>Attributes:</p> Name Type Description <code>elevator_name</code> <code>Optional[str]</code> <p>\u6607\u964d\u6a5f\u7cfb\u7d71\u306e\u540d\u79f0</p> <code>number</code> <code>Optional[int]</code> <p>\u53f0\u6570</p> <code>load_limit</code> <code>Optional[float]</code> <p>\u7a4d\u8f09\u91cf (kg)</p> <code>velocity</code> <code>Optional[float]</code> <p>\u901f\u5ea6 (m.min-1)</p> <code>transport_capacity_factor</code> <code>Optional[float]</code> <p>\u8f38\u9001\u80fd\u529b\u4fc2\u6570</p> <code>control_type</code> <code>Optional[Literal['VVVF(\u96fb\u529b\u56de\u751f\u306a\u3057)', 'VVVF(\u96fb\u529b\u56de\u751f\u3042\u308a)', 'VVVF(\u96fb\u529b\u56de\u751f\u306a\u3057\u3001\u30ae\u30a2\u30ec\u30b9)', 'VVVF(\u96fb\u529b\u56de\u751f\u3042\u308a\u3001\u30ae\u30a2\u30ec\u30b9)', '\u4ea4\u6d41\u5e30\u9084\u5236\u5fa1']]</code> <p>\u5236\u5fa1\u65b9\u5f0f</p> <code>info</code> <code>Optional[str]</code> <p>\u5099\u8003</p> Source code in <code>truzt/elevator_model.py</code> <pre><code>class ElevatorItem(BaseConfigModel):\n    \"\"\"Elevaror item.\n\n    Attributes:\n        elevator_name: \u6607\u964d\u6a5f\u7cfb\u7d71\u306e\u540d\u79f0\n        number: \u53f0\u6570\n        load_limit: \u7a4d\u8f09\u91cf (kg)\n        velocity: \u901f\u5ea6 (m.min-1)\n        transport_capacity_factor: \u8f38\u9001\u80fd\u529b\u4fc2\u6570\n        control_type: \u5236\u5fa1\u65b9\u5f0f\n        info: \u5099\u8003\n    \"\"\"\n\n    elevator_name: Optional[str]\n    number: Optional[int] = Field(gt=0)\n    load_limit: Optional[float] = Field(gt=0.0)\n    velocity: Optional[float] = Field(gt=0.0)\n    transport_capacity_factor: Optional[float] = Field(gt=0.0)\n    control_type: Optional[\n        Literal[\n            \"VVVF(\u96fb\u529b\u56de\u751f\u306a\u3057)\",\n            \"VVVF(\u96fb\u529b\u56de\u751f\u3042\u308a)\",\n            \"VVVF(\u96fb\u529b\u56de\u751f\u306a\u3057\u3001\u30ae\u30a2\u30ec\u30b9)\",\n            \"VVVF(\u96fb\u529b\u56de\u751f\u3042\u308a\u3001\u30ae\u30a2\u30ec\u30b9)\",\n            \"\u4ea4\u6d41\u5e30\u9084\u5236\u5fa1\",\n        ]\n    ]\n    info: Optional[str] = None\n</code></pre>"},{"location":"reference/truzt/elevator_model/#truzt.elevator_model.Elevators","title":"<code>Elevators</code>","text":"<p>               Bases: <code>BaseConfigModel</code></p> <p>Elevators.</p> <p>Attributes:</p> Name Type Description <code>elevator</code> <code>Optional[list[ElevatorItem]]</code> <p>list of ElevatorItem</p> Source code in <code>truzt/elevator_model.py</code> <pre><code>class Elevators(BaseConfigModel):\n    \"\"\"Elevators.\n\n    Attributes:\n        elevator: list of ElevatorItem\n    \"\"\"\n\n    elevator: Optional[list[ElevatorItem]] = None\n</code></pre>"},{"location":"reference/truzt/envelope_set_model/","title":"envelope_set_model","text":"<p>Module for defining the EnvelopeSet model.</p>"},{"location":"reference/truzt/envelope_set_model/#truzt.envelope_set_model.EnvelopeSet","title":"<code>EnvelopeSet</code>","text":"<p>               Bases: <code>BaseConfigModel</code></p> <p>Envelope set.</p> <p>Attributes:</p> Name Type Description <code>is_air_conditioned</code> <code>Optional[Literal['\u6709', '\u7121']]</code> <p>\u7a7a\u8abf\u306e\u6709\u7121</p> <code>wall_list</code> <code>Optional[list[WallListItem]]</code> <p>\u58c1\u30ea\u30b9\u30c8</p> Source code in <code>truzt/envelope_set_model.py</code> <pre><code>class EnvelopeSet(BaseConfigModel):\n    \"\"\"Envelope set.\n\n    Attributes:\n        is_air_conditioned: \u7a7a\u8abf\u306e\u6709\u7121\n        wall_list: \u58c1\u30ea\u30b9\u30c8\n    \"\"\"\n\n    is_air_conditioned: Optional[Literal[\"\u6709\", \"\u7121\"]] = Field(\n        None,\n        alias=\"isAirconditioned\",  # NOTE: for builelib compatibility\n    )\n    wall_list: Optional[list[WallListItem]] = None\n</code></pre>"},{"location":"reference/truzt/envelope_set_model/#truzt.envelope_set_model.WallListItem","title":"<code>WallListItem</code>","text":"<p>               Bases: <code>BaseConfigModel</code></p> <p>Wall list item.</p> <p>Attributes:</p> Name Type Description <code>direction</code> <code>Optional[Literal['\u5317', '\u5317\u6771', '\u6771', '\u5357\u6771', '\u5357', '\u5357\u897f', '\u897f', '\u5317\u897f', '\u6c34\u5e73\uff08\u4e0a\uff09', '\u6c34\u5e73\uff08\u4e0b\uff09']]</code> <p>\u65b9\u4f4d</p> <code>envelope_area</code> <code>Optional[float]</code> <p>\u5916\u76ae\u9762\u7a4d</p> <code>envelope_width</code> <code>Optional[float]</code> <p>\u5916\u76ae\u306e\u5e45</p> <code>envelope_height</code> <code>Optional[float]</code> <p>\u5916\u76ae\u306e\u9ad8\u3055</p> <code>wall_spec</code> <code>Optional[str]</code> <p>\u65ad\u71b1\u4ed5\u69d8\u540d\u79f0</p> <code>wall_type</code> <code>Optional[Literal['\u65e5\u306e\u5f53\u305f\u308b\u5916\u58c1', '\u65e5\u306e\u5f53\u305f\u3089\u306a\u3044\u5916\u58c1', '\u5730\u76e4\u306b\u63a5\u3059\u308b\u5916\u58c1', '\u5185\u58c1']]</code> <p>\u5916\u58c1\u306e\u7a2e\u985e</p> <code>window_list</code> <code>Optional[list[WindowListItem]]</code> <p>\u7a93\u30ea\u30b9\u30c8</p> Source code in <code>truzt/envelope_set_model.py</code> <pre><code>class WallListItem(BaseConfigModel):\n    \"\"\"Wall list item.\n\n    Attributes:\n        direction: \u65b9\u4f4d\n        envelope_area: \u5916\u76ae\u9762\u7a4d\n        envelope_width: \u5916\u76ae\u306e\u5e45\n        envelope_height: \u5916\u76ae\u306e\u9ad8\u3055\n        wall_spec: \u65ad\u71b1\u4ed5\u69d8\u540d\u79f0\n        wall_type: \u5916\u58c1\u306e\u7a2e\u985e\n        window_list: \u7a93\u30ea\u30b9\u30c8\n    \"\"\"\n\n    direction: Optional[\n        Literal[\n            \"\u5317\",\n            \"\u5317\u6771\",\n            \"\u6771\",\n            \"\u5357\u6771\",\n            \"\u5357\",\n            \"\u5357\u897f\",\n            \"\u897f\",\n            \"\u5317\u897f\",\n            \"\u6c34\u5e73\uff08\u4e0a\uff09\",\n            \"\u6c34\u5e73\uff08\u4e0b\uff09\",\n        ]\n    ] = None\n\n    envelope_area: Optional[float] = Field(\n        None,\n        gt=0,\n    )\n\n    envelope_width: Optional[float] = Field(\n        None,\n        gt=0,\n    )\n\n    envelope_height: Optional[float] = Field(\n        None,\n        gt=0,\n    )\n\n    wall_spec: Optional[str] = Field(\n        None,\n    )\n\n    wall_type: Optional[\n        Literal[\n            \"\u65e5\u306e\u5f53\u305f\u308b\u5916\u58c1\",\n            \"\u65e5\u306e\u5f53\u305f\u3089\u306a\u3044\u5916\u58c1\",\n            \"\u5730\u76e4\u306b\u63a5\u3059\u308b\u5916\u58c1\",\n            \"\u5185\u58c1\",\n        ]\n    ] = None\n\n    window_list: Optional[list[WindowListItem]] = None\n</code></pre>"},{"location":"reference/truzt/envelope_set_model/#truzt.envelope_set_model.WindowListItem","title":"<code>WindowListItem</code>","text":"<p>               Bases: <code>BaseConfigModel</code></p> <p>Window list item.</p> <p>NOTE: builelib\u3067\u306f\u7a93\u9762\u7a4d\u3092WindowNumber\u306b\u5165\u308c\u3066\u3044\u308b?</p> <p>Attributes:</p> Name Type Description <code>window_id</code> <code>Optional[str]</code> <p>\u958b\u53e3\u90e8\u4ed5\u69d8\u540d\u79f0</p> <code>window_number</code> <code>Optional[float]</code> <p>\u5efa\u5177\u7b49\u500b\u6570</p> <code>is_blind</code> <code>Optional[Literal['\u6709', '\u7121']]</code> <p>\u30d6\u30e9\u30a4\u30f3\u30c9\u306e\u6709\u7121</p> <code>eaves_id</code> <code>Optional[str]</code> <p>\u65e5\u9664\u3051\u306e\u540d\u79f0</p> <code>info</code> <code>Optional[str]</code> <p>\u5099\u8003</p> Source code in <code>truzt/envelope_set_model.py</code> <pre><code>class WindowListItem(BaseConfigModel):\n    \"\"\"Window list item.\n\n    NOTE: builelib\u3067\u306f\u7a93\u9762\u7a4d\u3092WindowNumber\u306b\u5165\u308c\u3066\u3044\u308b?\n\n    Attributes:\n        window_id: \u958b\u53e3\u90e8\u4ed5\u69d8\u540d\u79f0\n        window_number: \u5efa\u5177\u7b49\u500b\u6570\n        is_blind: \u30d6\u30e9\u30a4\u30f3\u30c9\u306e\u6709\u7121\n        eaves_id: \u65e5\u9664\u3051\u306e\u540d\u79f0\n        info: \u5099\u8003\n    \"\"\"\n\n    window_id: Optional[str] = Field(\n        None,\n        alias=\"WindowID\",  # NOTE: for builelib compatibility\n    )\n    window_number: Optional[float] = Field(\n        None,\n        gt=0,\n    )\n    is_blind: Optional[Literal[\"\u6709\", \"\u7121\"]] = Field(\n        None,\n        alias=\"isBlind\",  # NOTE: for builelib compatibility\n    )\n    eaves_id: Optional[str] = Field(\n        None,\n        alias=\"EavesID\",  # NOTE: for builelib compatibility\n    )\n    info: Optional[str] = None\n</code></pre>"},{"location":"reference/truzt/heat_source_system_model/","title":"heat_source_system_model","text":"<p>Module for defining the HeatSourceSystem model.</p>"},{"location":"reference/truzt/heat_source_system_model/#truzt.heat_source_system_model.HeatSource","title":"<code>HeatSource</code>","text":"<p>               Bases: <code>BaseConfigModel</code></p> <p>heat source.</p> <p>Attributes:</p> Name Type Description <code>storage_type</code> <code>Optional[Literal['\u6c34\u84c4\u71b1(\u6df7\u5408\u578b)', '\u6c34\u84c4\u71b1(\u6210\u5c64\u578b)', '\u6c37\u84c4\u71b1']]</code> <p>\u84c4\u71b1\u306e\u7a2e\u985e</p> <code>storage_size</code> <code>Optional[float]</code> <p>\u84c4\u71b1\u5bb9\u91cf</p> <code>is_staging_control</code> <code>Optional[Literal['\u6709', '\u7121']]</code> <p>\u53f0\u6570\u5236\u5fa1</p> <code>heat_source</code> <code>Optional[list[HeatSourceItem]]</code> <p>list of HeatSourceItem</p> Source code in <code>truzt/heat_source_system_model.py</code> <pre><code>class HeatSource(BaseConfigModel):\n    \"\"\"heat source.\n\n    Attributes:\n        storage_type: \u84c4\u71b1\u306e\u7a2e\u985e\n        storage_size: \u84c4\u71b1\u5bb9\u91cf\n        is_staging_control: \u53f0\u6570\u5236\u5fa1\n        heat_source: list of HeatSourceItem\n    \"\"\"\n\n    storage_type: Optional[\n        Literal[\n            \"\u6c34\u84c4\u71b1(\u6df7\u5408\u578b)\",\n            \"\u6c34\u84c4\u71b1(\u6210\u5c64\u578b)\",\n            \"\u6c37\u84c4\u71b1\",\n        ]\n    ] = None\n    storage_size: Optional[float] = Field(None, gt=0.0)\n\n    is_staging_control: Optional[Literal[\"\u6709\", \"\u7121\"]] = Field(\n        None,\n        alias=\"isStagingControl\",  # NOTE: for builelib compatibility\n    )\n    heat_source: Optional[list[HeatSourceItem]] = Field(\n        None,\n        alias=\"Heatsource\",  # NOTE: for builelib compatibility\n    )\n</code></pre>"},{"location":"reference/truzt/heat_source_system_model/#truzt.heat_source_system_model.HeatSourceItem","title":"<code>HeatSourceItem</code>","text":"<p>               Bases: <code>BaseConfigModel</code></p> <p>heat source item.</p> <p>Attributes:</p> Name Type Description <code>heat_source_type</code> <code>Optional[str]</code> <p>\u71b1\u6e90\u6a5f\u7a2e</p> <code>number</code> <code>Optional[int]</code> <p>\u53f0\u6570</p> <code>supply_water_temp_summer</code> <code>Optional[float]</code> <p>\u9001\u6c34\u6e29\u5ea6 \u590f\u671f</p> <code>supply_water_temp_middle</code> <code>Optional[float]</code> <p>\u9001\u6c34\u6e29\u5ea6 \u4e2d\u9593\u671f</p> <code>supply_water_temp_winter</code> <code>Optional[float]</code> <p>\u9001\u6c34\u6e29\u5ea6 \u51ac\u671f</p> <code>heat_source_rated_capacity</code> <code>Optional[float]</code> <p>\u71b1\u6e90\u672c\u4f53 \u5b9a\u683c\u80fd\u529b</p> <code>heat_source_rated_power_consumption</code> <code>Optional[float]</code> <p>\u71b1\u6e90\u4e3b\u6a5f \u5b9a\u683c\u6d88\u8cbb\u96fb\u529b</p> <code>heat_source_rated_fuel_consumption</code> <code>Optional[float]</code> <p>\u71b1\u6e90\u4e3b\u6a5f \u5b9a\u683c\u71c3\u6599\u6d88\u8cbb\u91cf</p> <code>heat_source_sub_rated_power_consumption</code> <code>Optional[float]</code> <p>\u71b1\u6e90\u88dc\u6a5f \u5b9a\u683c\u6d88\u8cbb\u96fb\u529b</p> <code>primary_pump_power_consumption</code> <code>Optional[float]</code> <p>\u4e00\u6b21\u30dd\u30f3\u30d7 \u5b9a\u683c\u6d88\u8cbb\u96fb\u529b</p> <code>primary_pump_control_type</code> <code>Optional[Literal['\u6709', '\u7121']]</code> <p>\u4e00\u6b21\u30dd\u30f3\u30d7 \u5236\u5fa1\u65b9\u5f0f</p> <code>cooling_tower_capacity</code> <code>Optional[float]</code> <p>\u51b7\u5374\u5854 \u5b9a\u683c\u80fd\u529b</p> <code>cooling_tower_fan_power_consumption</code> <code>Optional[float]</code> <p>\u51b7\u5374\u5854 \u30d5\u30a1\u30f3\u6d88\u8cbb\u96fb</p> <code>cooling_tower_pump_power_consumption</code> <code>Optional[float]</code> <p>\u51b7\u5374\u5854 \u30dd\u30f3\u30d7\u6d88\u8cbb\u96fb</p> <code>cooling_tower_control_type</code> <code>Optional[Literal['\u6709', '\u7121']]</code> <p>\u51b7\u5374\u5854 \u5236\u5fa1\u65b9\u5f0f</p> <code>info</code> <code>Optional[str]</code> <p>\u5099\u8003</p> Source code in <code>truzt/heat_source_system_model.py</code> <pre><code>class HeatSourceItem(BaseConfigModel):\n    \"\"\"heat source item.\n\n    Attributes:\n        heat_source_type: \u71b1\u6e90\u6a5f\u7a2e\n        number: \u53f0\u6570\n        supply_water_temp_summer: \u9001\u6c34\u6e29\u5ea6 \u590f\u671f\n        supply_water_temp_middle: \u9001\u6c34\u6e29\u5ea6 \u4e2d\u9593\u671f\n        supply_water_temp_winter: \u9001\u6c34\u6e29\u5ea6 \u51ac\u671f\n        heat_source_rated_capacity: \u71b1\u6e90\u672c\u4f53 \u5b9a\u683c\u80fd\u529b\n        heat_source_rated_power_consumption: \u71b1\u6e90\u4e3b\u6a5f \u5b9a\u683c\u6d88\u8cbb\u96fb\u529b\n        heat_source_rated_fuel_consumption: \u71b1\u6e90\u4e3b\u6a5f \u5b9a\u683c\u71c3\u6599\u6d88\u8cbb\u91cf\n        heat_source_sub_rated_power_consumption: \u71b1\u6e90\u88dc\u6a5f \u5b9a\u683c\u6d88\u8cbb\u96fb\u529b\n        primary_pump_power_consumption: \u4e00\u6b21\u30dd\u30f3\u30d7 \u5b9a\u683c\u6d88\u8cbb\u96fb\u529b\n        primary_pump_control_type: \u4e00\u6b21\u30dd\u30f3\u30d7 \u5236\u5fa1\u65b9\u5f0f\n        cooling_tower_capacity: \u51b7\u5374\u5854 \u5b9a\u683c\u80fd\u529b\n        cooling_tower_fan_power_consumption: \u51b7\u5374\u5854 \u30d5\u30a1\u30f3\u6d88\u8cbb\u96fb\n        cooling_tower_pump_power_consumption: \u51b7\u5374\u5854 \u30dd\u30f3\u30d7\u6d88\u8cbb\u96fb\n        cooling_tower_control_type: \u51b7\u5374\u5854 \u5236\u5fa1\u65b9\u5f0f\n        info: \u5099\u8003\n    \"\"\"\n\n    heat_source_type: Optional[str] = Field(\n        None,\n        alias=\"HeatsourceType\",  # NOTE: for builelib compatibility\n    )\n    number: Optional[int] = Field(None, gt=0)\n    supply_water_temp_summer: Optional[float] = None\n    supply_water_temp_middle: Optional[float] = None\n    supply_water_temp_winter: Optional[float] = None\n    heat_source_rated_capacity: Optional[float] = Field(\n        None,\n        ge=0.0,\n        alias=\"HeatsourceRatedCapacity\",  # NOTE: for builelib compatibility\n    )\n    heat_source_rated_power_consumption: Optional[float] = Field(\n        None,\n        ge=0.0,\n        alias=\"HeatsourceRatedPowerConsumption\",  # NOTE: for builelib compatibility\n    )\n    heat_source_rated_fuel_consumption: Optional[float] = Field(\n        None,\n        ge=0.0,\n        alias=\"HeatsourceRatedFuelConsumption\",  # NOTE: for builelib compatibility\n    )\n    heat_source_sub_rated_power_consumption: Optional[float] = Field(\n        None,\n        ge=0.0,\n        alias=\"Heatsource_sub_RatedPowerConsumption\",  # NOTE: for builelib compatibility\n    )\n    primary_pump_power_consumption: Optional[float] = Field(None, ge=0.0)\n    primary_pump_control_type: Optional[Literal[\"\u6709\", \"\u7121\"]] = Field(\n        None,\n        alias=\"PrimaryPumpContolType\",  # NOTE: for builelib typo compatibility\n    )\n    cooling_tower_capacity: Optional[float] = Field(None, ge=0.0)\n    cooling_tower_fan_power_consumption: Optional[float] = Field(None, ge=0.0)\n    cooling_tower_pump_power_consumption: Optional[float] = Field(None, ge=0.0)\n    cooling_tower_control_type: Optional[Literal[\"\u6709\", \"\u7121\"]] = Field(\n        None,\n        alias=\"CoolingTowerContolType\",  # NOTE: for builelib TYPO compatibility\n    )\n    info: Optional[str] = None\n</code></pre>"},{"location":"reference/truzt/heat_source_system_model/#truzt.heat_source_system_model.HeatSourceSystem","title":"<code>HeatSourceSystem</code>","text":"<p>               Bases: <code>BaseConfigModel</code></p> <p>Heat source system.</p> <p>Attributes:</p> Name Type Description <code>cooling</code> <code>Optional[HeatSource]</code> <p>\u51b7\u623f\u7528\u306e\u71b1\u6e90</p> <code>heating</code> <code>Optional[HeatSource]</code> <p>\u6696\u623f\u7528\u306e\u71b1\u6e90</p> <code>cooling_with_heat_storage</code> <code>Optional[HeatSource]</code> <p>\u84c4\u71b1\u3092\u4f34\u3046\u51b7\u623f\u7528\u306e\u71b1\u6e90</p> <code>heating_with_heat_storage</code> <code>Optional[HeatSource]</code> <p>\u84c4\u71b1\u3092\u4f34\u3046\u6696\u623f\u7528\u306e\u71b1\u6e90</p> Source code in <code>truzt/heat_source_system_model.py</code> <pre><code>class HeatSourceSystem(BaseConfigModel):\n    \"\"\"Heat source system.\n\n    Attributes:\n        cooling: \u51b7\u623f\u7528\u306e\u71b1\u6e90\n        heating: \u6696\u623f\u7528\u306e\u71b1\u6e90\n        cooling_with_heat_storage: \u84c4\u71b1\u3092\u4f34\u3046\u51b7\u623f\u7528\u306e\u71b1\u6e90\n        heating_with_heat_storage: \u84c4\u71b1\u3092\u4f34\u3046\u6696\u623f\u7528\u306e\u71b1\u6e90\n    \"\"\"\n\n    cooling: Optional[HeatSource] = Field(\n        None,\n        alias=\"\u51b7\u623f\",\n    )\n    heating: Optional[HeatSource] = Field(\n        None,\n        alias=\"\u6696\u623f\",\n    )\n    cooling_with_heat_storage: Optional[HeatSource] = Field(\n        None,\n        alias=\"\u51b7\u623f(\u84c4\u71b1)\",\n    )\n    heating_with_heat_storage: Optional[HeatSource] = Field(\n        None,\n        alias=\"\u6696\u623f(\u84c4\u71b1)\",\n    )\n</code></pre>"},{"location":"reference/truzt/hot_water_room_model/","title":"hot_water_room_model","text":"<p>Module for defining the HotWaterRoom and HotWaterSystemItem models.</p>"},{"location":"reference/truzt/hot_water_room_model/#truzt.hot_water_room_model.HotWaterRoom","title":"<code>HotWaterRoom</code>","text":"<p>               Bases: <code>BaseConfigModel</code></p> <p>Hot water room.</p> <p>Attributes:</p> Name Type Description <code>hot_water_system</code> <code>Optional[list[HotWaterSystemItem]]</code> <p>list of HotWaterSystemItem</p> Source code in <code>truzt/hot_water_room_model.py</code> <pre><code>class HotWaterRoom(BaseConfigModel):\n    \"\"\"Hot water room.\n\n    Attributes:\n        hot_water_system: list of HotWaterSystemItem\n    \"\"\"\n\n    hot_water_system: Optional[list[HotWaterSystemItem]] = Field(\n        None,\n        alias=\"HotwaterSystem\",\n    )\n</code></pre>"},{"location":"reference/truzt/hot_water_room_model/#truzt.hot_water_room_model.HotWaterSystemItem","title":"<code>HotWaterSystemItem</code>","text":"<p>               Bases: <code>BaseConfigModel</code></p> <p>Hot water system.</p> <p>Attributes:</p> Name Type Description <code>system_name</code> <code>Optional[str]</code> <p>\u7d66\u6e6f\u30b7\u30b9\u30c6\u30e0\u540d\u79f0</p> <code>usage_type</code> <code>Optional[Literal['\u4fbf\u6240', '\u6d74\u5ba4', '\u53a8\u623f', '\u305d\u306e\u4ed6']]</code> <p>\u7d66\u6e6f\u7528\u9014</p> <code>hot_water_saving_system</code> <code>Optional[Literal['\u81ea\u52d5\u7d66\u6e6f\u6813', '\u7bc0\u6e6fB1', '\u7121']]</code> <p>\u7bc0\u6e6f\u5668\u5177</p> <code>info</code> <code>Optional[str]</code> <p>\u5099\u8003</p> Source code in <code>truzt/hot_water_room_model.py</code> <pre><code>class HotWaterSystemItem(BaseConfigModel):\n    \"\"\"Hot water system.\n\n    Attributes:\n        system_name: \u7d66\u6e6f\u30b7\u30b9\u30c6\u30e0\u540d\u79f0\n        usage_type: \u7d66\u6e6f\u7528\u9014\n        hot_water_saving_system: \u7bc0\u6e6f\u5668\u5177\n        info: \u5099\u8003\n    \"\"\"\n\n    system_name: Optional[str]\n    usage_type: Optional[\n        Literal[\n            \"\u4fbf\u6240\",\n            \"\u6d74\u5ba4\",\n            \"\u53a8\u623f\",\n            \"\u305d\u306e\u4ed6\",\n        ]\n    ] = None\n    hot_water_saving_system: Optional[\n        Literal[\n            \"\u81ea\u52d5\u7d66\u6e6f\u6813\",\n            \"\u7bc0\u6e6fB1\",\n            \"\u7121\",\n        ]\n    ] = None\n    info: Optional[str] = None\n</code></pre>"},{"location":"reference/truzt/hot_water_supply_system_model/","title":"hot_water_supply_system_model","text":"<p>Module for defining the HotWaterSupplySystem model.</p>"},{"location":"reference/truzt/hot_water_supply_system_model/#truzt.hot_water_supply_system_model.HeatSourceUnitItem","title":"<code>HeatSourceUnitItem</code>","text":"<p>               Bases: <code>BaseConfigModel</code></p> <p>Heat source unit item.</p> <p>Attributes:</p> Name Type Description <code>usage_type</code> <code>Optional[Literal['\u7d66\u6e6f\u8ca0\u8377\u7528', '\u914d\u7ba1\u4fdd\u6e29\u7528', '\u8caf\u6e6f\u69fd\u4fdd\u6e29\u7528', '\u305d\u306e\u4ed6']]</code> <p>\u7d66\u6e6f\u7528\u9014</p> <code>heat_source_type</code> <code>Optional[Literal['\u30ac\u30b9\u7d66\u6e6f\u6a5f', '\u30ac\u30b9\u7d66\u6e6f\u6696\u623f\u6a5f', '\u30dc\u30a4\u30e9', '\u77f3\u6cb9\u7d66\u6e6f\u6a5f(\u7d66\u6e6f\u5358\u6a5f\u80fd)', '\u77f3\u6cb9\u7d66\u6e6f\u6a5f(\u7d66\u6e6f\u6a5f\u4ed8\u3075\u308d\u304c\u307e)', '\u5bb6\u5ead\u7528\u30d2\u30fc\u30c8\u30dd\u30f3\u30d7\u7d66\u6e6f\u6a5f', '\u696d\u52d9\u7528\u30d2\u30fc\u30c8\u30dd\u30f3\u30d7\u7d66\u6e6f\u6a5f', '\u8caf\u6e6f\u5f0f\u96fb\u6c17\u6e29\u6c34\u5668', '\u96fb\u6c17\u77ac\u9593\u6e6f\u6cb8\u5668', '\u771f\u7a7a\u5f0f\u6e29\u6c34\u767a\u751f\u6a5f', '\u7121\u5727\u5f0f\u6e29\u6c34\u767a\u751f\u6a5f', '\u5730\u57df\u71b1\u4f9b\u7d66']]</code> <p>\u71b1\u6e90\u6a5f\u7a2e</p> <code>number</code> <code>Optional[int]</code> <p>\u53f0\u6570</p> <code>rated_capacity</code> <code>Optional[float]</code> <p>\u5b9a\u683c\u52a0\u71b1\u80fd\u529b</p> <code>rated_power_consumption</code> <code>Optional[float]</code> <p>\u5b9a\u683c\u6d88\u8cbb\u96fb\u529b</p> <code>rated_fuel_consumption</code> <code>Optional[float]</code> <p>\u5b9a\u683c\u71c3\u6599\u6d88\u8cbb\u91cf(\u9ad8\u4f4d)</p> <code>info</code> <code>Optional[str]</code> <p>\u5099\u8003</p> Source code in <code>truzt/hot_water_supply_system_model.py</code> <pre><code>class HeatSourceUnitItem(BaseConfigModel):\n    \"\"\"Heat source unit item.\n\n    Attributes:\n        usage_type: \u7d66\u6e6f\u7528\u9014\n        heat_source_type: \u71b1\u6e90\u6a5f\u7a2e\n        number: \u53f0\u6570\n        rated_capacity: \u5b9a\u683c\u52a0\u71b1\u80fd\u529b\n        rated_power_consumption: \u5b9a\u683c\u6d88\u8cbb\u96fb\u529b\n        rated_fuel_consumption: \u5b9a\u683c\u71c3\u6599\u6d88\u8cbb\u91cf(\u9ad8\u4f4d)\n        info: \u5099\u8003\n    \"\"\"\n\n    usage_type: Optional[\n        Literal[\n            \"\u7d66\u6e6f\u8ca0\u8377\u7528\",\n            \"\u914d\u7ba1\u4fdd\u6e29\u7528\",\n            \"\u8caf\u6e6f\u69fd\u4fdd\u6e29\u7528\",\n            \"\u305d\u306e\u4ed6\",\n        ]\n    ]\n\n    heat_source_type: Optional[\n        Literal[\n            \"\u30ac\u30b9\u7d66\u6e6f\u6a5f\",\n            \"\u30ac\u30b9\u7d66\u6e6f\u6696\u623f\u6a5f\",\n            \"\u30dc\u30a4\u30e9\",\n            \"\u77f3\u6cb9\u7d66\u6e6f\u6a5f(\u7d66\u6e6f\u5358\u6a5f\u80fd)\",\n            \"\u77f3\u6cb9\u7d66\u6e6f\u6a5f(\u7d66\u6e6f\u6a5f\u4ed8\u3075\u308d\u304c\u307e)\",\n            \"\u5bb6\u5ead\u7528\u30d2\u30fc\u30c8\u30dd\u30f3\u30d7\u7d66\u6e6f\u6a5f\",\n            \"\u696d\u52d9\u7528\u30d2\u30fc\u30c8\u30dd\u30f3\u30d7\u7d66\u6e6f\u6a5f\",\n            \"\u8caf\u6e6f\u5f0f\u96fb\u6c17\u6e29\u6c34\u5668\",\n            \"\u96fb\u6c17\u77ac\u9593\u6e6f\u6cb8\u5668\",\n            \"\u771f\u7a7a\u5f0f\u6e29\u6c34\u767a\u751f\u6a5f\",\n            \"\u7121\u5727\u5f0f\u6e29\u6c34\u767a\u751f\u6a5f\",\n            \"\u5730\u57df\u71b1\u4f9b\u7d66\",\n        ]\n    ]\n\n    number: Optional[int] = Field(gt=0)\n\n    rated_capacity: Optional[float] = Field(gt=0.0)\n    rated_power_consumption: Optional[float] = Field(ge=0.0)\n    rated_fuel_consumption: Optional[float] = Field(ge=0.0)\n\n    info: Optional[str] = None\n</code></pre>"},{"location":"reference/truzt/hot_water_supply_system_model/#truzt.hot_water_supply_system_model.HotWaterSupplySystem","title":"<code>HotWaterSupplySystem</code>","text":"<p>               Bases: <code>BaseConfigModel</code></p> <p>Hot water supply system.</p> <p>Attributes:</p> Name Type Description <code>heat_source_unit</code> <code>Optional[list[HeatSourceUnitItem]]</code> <p>list of HeatSourceUnitItem</p> <code>insulation_type</code> <code>Optional[Literal['\u4fdd\u6e29\u4ed5\u69d81', '\u4fdd\u6e29\u4ed5\u69d82', '\u4fdd\u6e29\u4ed5\u69d83', '\u88f8\u7ba1']]</code> <p>\u914d\u7ba1\u4fdd\u6e29\u4ed5\u69d8</p> <code>pipe_size</code> <code>Optional[float]</code> <p>\u914d\u7ba1\u6700\u5927\u53e3\u5f84 (mm)</p> <code>solar_system_area</code> <code>Optional[float]</code> <p>\u592a\u967d\u71b1\u5229\u7528 \u6709\u52b9\u96c6\u71b1\u9762\u7a4d (m2)</p> <code>solar_system_direction</code> <code>Optional[float]</code> <p>\u592a\u967d\u71b1\u5229\u7528 \u96c6\u71b1\u9762\u306e\u65b9\u4f4d\u89d2 (deg)</p> <code>solar_system_angle</code> <code>Optional[float]</code> <p>\u592a\u967d\u71b1\u5229\u7528 \u96c6\u71b1\u9762\u306e\u50be\u659c\u89d2 (deg)</p> <code>info</code> <code>Optional[str]</code> <p>\u5099\u8003</p> Source code in <code>truzt/hot_water_supply_system_model.py</code> <pre><code>class HotWaterSupplySystem(BaseConfigModel):\n    \"\"\"Hot water supply system.\n\n    Attributes:\n        heat_source_unit: list of HeatSourceUnitItem\n        insulation_type: \u914d\u7ba1\u4fdd\u6e29\u4ed5\u69d8\n        pipe_size: \u914d\u7ba1\u6700\u5927\u53e3\u5f84 (mm)\n        solar_system_area: \u592a\u967d\u71b1\u5229\u7528 \u6709\u52b9\u96c6\u71b1\u9762\u7a4d (m2)\n        solar_system_direction: \u592a\u967d\u71b1\u5229\u7528 \u96c6\u71b1\u9762\u306e\u65b9\u4f4d\u89d2 (deg)\n        solar_system_angle: \u592a\u967d\u71b1\u5229\u7528 \u96c6\u71b1\u9762\u306e\u50be\u659c\u89d2 (deg)\n        info: \u5099\u8003\n    \"\"\"\n\n    heat_source_unit: Optional[list[HeatSourceUnitItem]]\n\n    insulation_type: Optional[\n        Literal[\n            \"\u4fdd\u6e29\u4ed5\u69d81\",\n            \"\u4fdd\u6e29\u4ed5\u69d82\",\n            \"\u4fdd\u6e29\u4ed5\u69d83\",\n            \"\u88f8\u7ba1\",\n        ]\n    ] = None\n    pipe_size: Optional[float] = Field(None, gt=0.0)\n\n    solar_system_area: Optional[float] = Field(None, gt=0.0)\n    solar_system_direction: Optional[float] = Field(None, ge=0.0, le=360.0)\n    solar_system_angle: Optional[float] = Field(None, ge=0.0, le=360.0)\n\n    info: Optional[str] = None\n</code></pre>"},{"location":"reference/truzt/lighting_room_model/","title":"lighting_room_model","text":"<p>Module for defining the LightingRoom and LightingUnit models.</p>"},{"location":"reference/truzt/lighting_room_model/#truzt.lighting_room_model.LightingRoom","title":"<code>LightingRoom</code>","text":"<p>               Bases: <code>BaseConfigModel</code></p> <p>Lighting room.</p> <p>Attributes:</p> Name Type Description <code>room_width</code> <code>Optional[float]</code> <p>\u5ba4\u6307\u6570 \u5ba4\u306e\u9593\u53e3 (m)</p> <code>room_depth</code> <code>Optional[float]</code> <p>\u5ba4\u6307\u6570 \u5ba4\u306e\u5965\u884c (m)</p> <code>unit_height</code> <code>Optional[float]</code> <p>\u5ba4\u6307\u6570 \u5668\u5177\u9ad8\u3055 (m)</p> <code>room_index</code> <code>Optional[float]</code> <p>\u5ba4\u6307\u6570</p> <code>lighting_unit</code> <code>dict[str, LightingUnit]</code> <p>LightingUnit</p> Source code in <code>truzt/lighting_room_model.py</code> <pre><code>class LightingRoom(BaseConfigModel):\n    \"\"\"Lighting room.\n\n    Attributes:\n        room_width: \u5ba4\u6307\u6570 \u5ba4\u306e\u9593\u53e3 (m)\n        room_depth: \u5ba4\u6307\u6570 \u5ba4\u306e\u5965\u884c (m)\n        unit_height: \u5ba4\u6307\u6570 \u5668\u5177\u9ad8\u3055 (m)\n        room_index: \u5ba4\u6307\u6570\n        lighting_unit: LightingUnit\n    \"\"\"\n\n    # NOTE: builelib\u3067\u3053\u3053\u3060\u3051camelCase\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u305d\u306e\u5bfe\u5fdc\n    model_config = ConfigDict(alias_generator=to_camel)\n\n    room_width: Optional[float] = Field(gt=0.0)\n    room_depth: Optional[float] = Field(gt=0.0)\n    unit_height: Optional[float] = Field(gt=0.0)\n    room_index: Optional[float] = Field(gt=0.0)\n    lighting_unit: dict[str, LightingUnit]\n</code></pre>"},{"location":"reference/truzt/lighting_room_model/#truzt.lighting_room_model.LightingUnit","title":"<code>LightingUnit</code>","text":"<p>               Bases: <code>BaseConfigModel</code></p> <p>Lighting unit.</p> <p>Attributes:</p> Name Type Description <code>rated_power</code> <code>Optional[float]</code> <p>\u5b9a\u683c\u6d88\u8cbb\u96fb\u529b (W.unit-1)</p> <code>number</code> <code>Optional[int]</code> <p>\u53f0\u6570</p> <code>occupant_sensing_ctrl</code> <code>Optional[Union[Literal['\u7121', '\u4e0b\u9650\u8abf\u5149\u65b9\u5f0f', '\u70b9\u6ec5\u65b9\u5f0f', '\u6e1b\u5149\u65b9\u5f0f'], float]]</code> <p>\u5728\u5ba4\u691c\u77e5\u5236\u5fa1</p> <code>illuminance_sensing_ctrl</code> <code>Optional[Union[Literal['\u7121', '\u8abf\u5149\u65b9\u5f0f', '\u8abf\u5149\u65b9\u5f0fBL', '\u8abf\u5149\u65b9\u5f0fW15', '\u8abf\u5149\u65b9\u5f0fW15BL', '\u8abf\u5149\u65b9\u5f0fW20', '\u8abf\u5149\u65b9\u5f0fW20BL', '\u8abf\u5149\u65b9\u5f0fW25', '\u8abf\u5149\u65b9\u5f0fW25BL', '\u70b9\u6ec5\u65b9\u5f0f'], float]]</code> <p>\u660e\u308b\u3055\u691c\u77e5\u5236\u5fa1</p> <code>time_schedule_ctrl</code> <code>Optional[Union[Literal['\u7121', '\u6e1b\u5149\u65b9\u5f0f', '\u70b9\u6ec5\u65b9\u5f0f'], float]]</code> <p>\u30bf\u30a4\u30e0\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u5236\u5fa1</p> <code>initial_illumination_correction_ctrl</code> <code>Optional[Union[Literal['\u7121', '\u30bf\u30a4\u30de\u65b9\u5f0f(LED)', '\u30bf\u30a4\u30de\u65b9\u5f0f(\u86cd\u5149\u706f)', '\u30bb\u30f3\u30b5\u65b9\u5f0f(LED)', '\u30bb\u30f3\u30b5\u65b9\u5f0f(\u86cd\u5149\u706f)'], float]]</code> <p>\u521d\u671f\u7167\u5ea6\u88dc\u6b63\u5236\u5fa1</p> Source code in <code>truzt/lighting_room_model.py</code> <pre><code>class LightingUnit(BaseConfigModel):\n    \"\"\"Lighting unit.\n\n    Attributes:\n        rated_power: \u5b9a\u683c\u6d88\u8cbb\u96fb\u529b (W.unit-1)\n        number: \u53f0\u6570\n        occupant_sensing_ctrl: \u5728\u5ba4\u691c\u77e5\u5236\u5fa1\n        illuminance_sensing_ctrl: \u660e\u308b\u3055\u691c\u77e5\u5236\u5fa1\n        time_schedule_ctrl: \u30bf\u30a4\u30e0\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u5236\u5fa1\n        initial_illumination_correction_ctrl: \u521d\u671f\u7167\u5ea6\u88dc\u6b63\u5236\u5fa1\n    \"\"\"\n\n    rated_power: Optional[float] = Field(\n        None,\n        ge=0.0,\n    )\n    number: Optional[int] = Field(\n        1,\n        ge=0,\n    )\n    occupant_sensing_ctrl: Optional[\n        Union[\n            Literal[\"\u7121\", \"\u4e0b\u9650\u8abf\u5149\u65b9\u5f0f\", \"\u70b9\u6ec5\u65b9\u5f0f\", \"\u6e1b\u5149\u65b9\u5f0f\"],\n            float,\n        ]\n    ] = Field(\n        None,\n        alias=\"OccupantSensingCTRL\",  # NOTE: for builelib compatibility (Ctrl -&gt; CTRL)\n    )\n    illuminance_sensing_ctrl: Optional[\n        Union[\n            Literal[\n                \"\u7121\",\n                \"\u8abf\u5149\u65b9\u5f0f\",\n                \"\u8abf\u5149\u65b9\u5f0fBL\",\n                \"\u8abf\u5149\u65b9\u5f0fW15\",\n                \"\u8abf\u5149\u65b9\u5f0fW15BL\",\n                \"\u8abf\u5149\u65b9\u5f0fW20\",\n                \"\u8abf\u5149\u65b9\u5f0fW20BL\",\n                \"\u8abf\u5149\u65b9\u5f0fW25\",\n                \"\u8abf\u5149\u65b9\u5f0fW25BL\",\n                \"\u70b9\u6ec5\u65b9\u5f0f\",\n            ],\n            float,\n        ]\n    ] = Field(\n        None,\n        alias=\"IlluminanceSensingCTRL\",  # NOTE: for builelib compatibility (Ctrl -&gt; CTRL)\n    )\n    time_schedule_ctrl: Optional[\n        Union[\n            Literal[\"\u7121\", \"\u6e1b\u5149\u65b9\u5f0f\", \"\u70b9\u6ec5\u65b9\u5f0f\"],\n            float,\n        ]\n    ] = Field(\n        None,\n        alias=\"TimeScheduleCTRL\",  # NOTE: for builelib compatibility (Ctrl -&gt; CTRL)\n    )\n    initial_illumination_correction_ctrl: Optional[\n        Union[\n            Literal[\n                \"\u7121\",\n                \"\u30bf\u30a4\u30de\u65b9\u5f0f(LED)\",\n                \"\u30bf\u30a4\u30de\u65b9\u5f0f(\u86cd\u5149\u706f)\",\n                \"\u30bb\u30f3\u30b5\u65b9\u5f0f(LED)\",\n                \"\u30bb\u30f3\u30b5\u65b9\u5f0f(\u86cd\u5149\u706f)\",\n            ],\n            float,\n        ]\n    ] = Field(\n        None,\n        # NOTE: for builelib compatibility (Ctrl -&gt; CTRL)\n        alias=\"InitialIlluminationCorrectionCTRL\",\n    )\n</code></pre>"},{"location":"reference/truzt/model_config/","title":"model_config","text":"<p>Module for defining the BaseConfigModel class.</p>"},{"location":"reference/truzt/model_config/#truzt.model_config.BaseConfigModel","title":"<code>BaseConfigModel</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>\u30e2\u30c7\u30eb\u5168\u4f53\u306e\u8a2d\u5b9a\u3092\u5b9a\u7fa9\u3059\u308b\u57fa\u5e95\u30af\u30e9\u30b9.</p> Source code in <code>truzt/model_config.py</code> <pre><code>class BaseConfigModel(BaseModel):\n    \"\"\"\u30e2\u30c7\u30eb\u5168\u4f53\u306e\u8a2d\u5b9a\u3092\u5b9a\u7fa9\u3059\u308b\u57fa\u5e95\u30af\u30e9\u30b9.\"\"\"\n\n    model_config = ConfigDict(\n        # PEP8\u306e\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u898f\u7d04\u306b\u5f93\u3044\u30af\u30e9\u30b9\u5909\u6570\u306fsnake_case\u3067\u8a18\u8ff0\u3057\u3066\u3044\u308b\u304c\n        # json serialize\u3067by_alias=True\u3068\u3057\u305f\u6642\u306b\u306fPascalCase\u3067\u51fa\u529b\u3059\u308b\n        alias_generator=to_pascal,\n        populate_by_name=True,\n        # \u672a\u6307\u5b9a\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u8a31\u53ef\u3057\u306a\u3044\n        extra=\"forbid\",\n    )\n\n    @field_validator(\"*\", mode=\"before\")\n    @classmethod\n    def _emptystr_to_none(cls, v: Any) -&gt; Any:\n        if v == \"\":\n            return None\n        return v\n</code></pre>"},{"location":"reference/truzt/photovoltaic_system_model/","title":"photovoltaic_system_model","text":"<p>Module for defining the PhotovoltaicSystem model.</p>"},{"location":"reference/truzt/photovoltaic_system_model/#truzt.photovoltaic_system_model.PhotovoltaicSystem","title":"<code>PhotovoltaicSystem</code>","text":"<p>               Bases: <code>BaseConfigModel</code></p> <p>Photovoltaic system.</p> <p>Attributes:</p> Name Type Description <code>power_conditioner_efficiency</code> <code>Optional[float]</code> <p>\u30d1\u30ef\u30fc\u30b3\u30f3\u30c7\u30a3\u30b7\u30e7\u30ca\u306e\u52b9\u7387</p> <code>cell_type</code> <code>Optional[Literal['\u7d50\u6676\u7cfb', '\u7d50\u6676\u7cfb\u4ee5\u5916']]</code> <p>\u592a\u967d\u96fb\u6c60\u306e\u7a2e\u985e</p> <code>array_setup_type</code> <code>Optional[Literal['\u67b6\u53f0\u8a2d\u7f6e\u5f62', '\u5c4b\u6839\u7f6e\u304d\u5f62', '\u305d\u306e\u4ed6']]</code> <p>\u30a2\u30ec\u30a4\u8a2d\u7f6e\u65b9\u5f0f</p> <code>array_capacity</code> <code>Optional[float]</code> <p>\u30a2\u30ec\u30a4\u306e\u30b7\u30b9\u30c6\u30e0\u5bb9\u91cf (kW)</p> <code>direction</code> <code>Optional[float]</code> <p>\u30d1\u30cd\u30eb\u306e\u65b9\u4f4d\u89d2 (deg)</p> <code>angle</code> <code>Optional[float]</code> <p>\u30d1\u30cd\u30eb\u306e\u50be\u659c\u89d2 (deg)</p> <code>info</code> <code>Optional[str]</code> <p>\u5099\u8003</p> Source code in <code>truzt/photovoltaic_system_model.py</code> <pre><code>class PhotovoltaicSystem(BaseConfigModel):\n    \"\"\"Photovoltaic system.\n\n    Attributes:\n        power_conditioner_efficiency: \u30d1\u30ef\u30fc\u30b3\u30f3\u30c7\u30a3\u30b7\u30e7\u30ca\u306e\u52b9\u7387\n        cell_type: \u592a\u967d\u96fb\u6c60\u306e\u7a2e\u985e\n        array_setup_type: \u30a2\u30ec\u30a4\u8a2d\u7f6e\u65b9\u5f0f\n        array_capacity: \u30a2\u30ec\u30a4\u306e\u30b7\u30b9\u30c6\u30e0\u5bb9\u91cf (kW)\n        direction: \u30d1\u30cd\u30eb\u306e\u65b9\u4f4d\u89d2 (deg)\n        angle: \u30d1\u30cd\u30eb\u306e\u50be\u659c\u89d2 (deg)\n        info: \u5099\u8003\n    \"\"\"\n\n    power_conditioner_efficiency: Optional[float] = Field(ge=0.0, le=1.0)\n    cell_type: Optional[\n        Literal[\n            \"\u7d50\u6676\u7cfb\",\n            \"\u7d50\u6676\u7cfb\u4ee5\u5916\",\n        ]\n    ] = None\n    array_setup_type: Optional[\n        Literal[\n            \"\u67b6\u53f0\u8a2d\u7f6e\u5f62\",\n            \"\u5c4b\u6839\u7f6e\u304d\u5f62\",\n            \"\u305d\u306e\u4ed6\",\n        ]\n    ] = None\n    array_capacity: Optional[float] = Field(gt=0.0)\n\n    direction: Optional[float] = Field(ge=0.0, le=360.0)\n    angle: Optional[float] = Field(ge=0.0, le=180.0)\n\n    info: Optional[str] = None\n</code></pre>"},{"location":"reference/truzt/room_model/","title":"room_model","text":"<p>Module for defining various room models.</p>"},{"location":"reference/truzt/room_model/#truzt.room_model.Room","title":"<code>Room</code>","text":"<p>               Bases: <code>BaseConfigModel</code></p> <p>\u5168\u5ba4\u7528\u9014\u306b\u5171\u901a\u3059\u308b\u57fa\u5e95\u30af\u30e9\u30b9.</p> <p>Attributes:</p> Name Type Description <code>main_building_type</code> <code>Annotated[Optional[BuildingType], Field(alias=mainbuildingType)]</code> <p>\u5efa\u7269\u7528\u9014</p> <code>building_type</code> <code>Annotated[Optional[BuildingType], Field(alias=buildingType)]</code> <p>\u5ba4\u7528\u9014(\u5927\u5206\u985e)</p> <code>room_type</code> <code>Annotated[Literal[RoomTypeOffice, RoomTypeHotel, RoomTypeHospital, RoomTypeDepartmentStore, RoomTypeSchool, RoomTypeRestaurant, RoomTypeCommunity, RoomTypeFactory, RoomTypeResidentialComplex], Field(alias=roomType)]</code> <p>\u5ba4\u7528\u9014(\u5c0f\u5206\u985e)</p> <code>floor_height</code> <code>Annotated[Optional[float], Field(gt=0, alias=floorHeight)]</code> <p>\u968e\u9ad8</p> <code>ceiling_height</code> <code>Annotated[Optional[float], Field(gt=0, alias=ceilingHeight)]</code> <p>\u5929\u4e95\u9ad8</p> <code>room_area</code> <code>Annotated[Optional[float], Field(gt=0, alias=roomArea)]</code> <p>\u5e8a\u9762\u7a4d</p> <code>zone</code> <code>Annotated[Optional[Zones], Field(alias=zone)]</code> <p>\u30be\u30fc\u30f3</p> <code>building_model_type</code> <code>Annotated[Optional[str], Field(alias=modelBuildingType)]</code> <p>\u30e2\u30c7\u30eb\u5efa\u7269</p> <code>building_group</code> <code>Annotated[Optional[str], Field(alias=buildingGroup)]</code> <p>\u5efa\u7269\u7fa4\u540d\u79f0</p> <code>info</code> <code>Optional[str]</code> <p>\u5099\u8003</p> Source code in <code>truzt/room_model.py</code> <pre><code>class Room(BaseConfigModel):\n    \"\"\"\u5168\u5ba4\u7528\u9014\u306b\u5171\u901a\u3059\u308b\u57fa\u5e95\u30af\u30e9\u30b9.\n\n    Attributes:\n        main_building_type: \u5efa\u7269\u7528\u9014\n        building_type: \u5ba4\u7528\u9014(\u5927\u5206\u985e)\n        room_type: \u5ba4\u7528\u9014(\u5c0f\u5206\u985e)\n        floor_height: \u968e\u9ad8\n        ceiling_height: \u5929\u4e95\u9ad8\n        room_area: \u5e8a\u9762\u7a4d\n        zone: \u30be\u30fc\u30f3\n        building_model_type: \u30e2\u30c7\u30eb\u5efa\u7269\n        building_group: \u5efa\u7269\u7fa4\u540d\u79f0\n        info: \u5099\u8003\n    \"\"\"\n\n    main_building_type: Annotated[\n        Optional[BuildingType],\n        Field(\n            alias=\"mainbuildingType\",  # NOTE: for builelib compatibility\n        ),\n    ] = None\n\n    building_type: Annotated[\n        Optional[BuildingType],\n        Field(\n            alias=\"buildingType\",  # NOTE: for builelib compatibility\n        ),\n    ] = None\n\n    room_type: Annotated[\n        Literal[\n            RoomTypeOffice,\n            RoomTypeHotel,\n            RoomTypeHospital,\n            RoomTypeDepartmentStore,\n            RoomTypeSchool,\n            RoomTypeRestaurant,\n            RoomTypeCommunity,\n            RoomTypeFactory,\n            RoomTypeResidentialComplex,\n        ],\n        Field(\n            alias=\"roomType\",  # NOTE: for builelib compatibility\n        ),\n    ]\n\n    floor_height: Annotated[\n        Optional[float],\n        Field(\n            gt=0,\n            alias=\"floorHeight\",  # NOTE: for builelib compatibility\n        ),\n    ] = None\n\n    ceiling_height: Annotated[\n        Optional[float],\n        Field(\n            gt=0,\n            alias=\"ceilingHeight\",  # NOTE: for builelib compatibility\n        ),\n    ] = None\n\n    room_area: Annotated[\n        Optional[float],\n        Field(\n            gt=0,\n            alias=\"roomArea\",  # NOTE: for builelib compatibility\n        ),\n    ] = None\n\n    zone: Annotated[\n        Optional[Zones],\n        Field(\n            alias=\"zone\",  # NOTE: for builelib compatibility\n        ),\n    ] = None\n\n    building_model_type: Annotated[\n        Optional[str],\n        Field(\n            alias=\"modelBuildingType\",  # NOTE: for builelib compatibility\n        ),\n    ] = None\n\n    building_group: Annotated[\n        Optional[str],\n        Field(\n            alias=\"buildingGroup\",  # NOTE: for builelib compatibility\n        ),\n    ] = None\n\n    info: Optional[str] = None\n\n    @model_validator(mode=\"after\")\n    def _check_building_type_room_type_match(self) -&gt; Self:\n        \"\"\"\u5efa\u7269\u7528\u9014\u3068\u5ba4\u7528\u9014\u306e\u7d44\u307f\u5408\u308f\u305b\u304c\u6b63\u3057\u3044\u304b\u30c1\u30a7\u30c3\u30af\u3059\u308b.\"\"\"\n        building_type_to_room_type = {\n            \"\u4e8b\u52d9\u6240\u7b49\": RoomTypeOffice,\n            \"\u30db\u30c6\u30eb\u7b49\": RoomTypeHotel,\n            \"\u75c5\u9662\u7b49\": RoomTypeHospital,\n            \"\u767e\u8ca8\u5e97\u7b49\": RoomTypeDepartmentStore,\n            \"\u5b66\u6821\u7b49\": RoomTypeSchool,\n            \"\u98f2\u98df\u5e97\u7b49\": RoomTypeRestaurant,\n            \"\u96c6\u4f1a\u6240\u7b49\": RoomTypeCommunity,\n            \"\u5de5\u5834\u7b49\": RoomTypeFactory,\n            \"\u5171\u540c\u4f4f\u5b85\": RoomTypeResidentialComplex,\n        }\n        valid_room_types = building_type_to_room_type[str(self.building_type)]\n        if self.room_type not in get_args(valid_room_types):\n            raise ValueError(\n                f\"room_type '{self.room_type}' is invalid \"\n                f\"for building_type '{self.building_type}'.\",\n                f\"must be one of {valid_room_types} \",\n            )\n        return self\n</code></pre>"},{"location":"reference/truzt/room_model/#truzt.room_model.Rooms","title":"<code>Rooms</code>","text":"<p>               Bases: <code>RootModel</code></p> <p>Room dict.</p> <p>Attributes:</p> Name Type Description <code>root</code> <code>dict[str, Room]</code> <p>Room dict.</p> Source code in <code>truzt/room_model.py</code> <pre><code>class Rooms(RootModel):\n    \"\"\"Room dict.\n\n    Attributes:\n        root: Room dict.\n    \"\"\"\n\n    root: dict[str, Room]\n\n    @classmethod\n    def from_workbook(cls, wb: Workbook, ver: Literal[\"v2\", \"v3\"] = \"v3\") -&gt; \"Rooms\":\n        \"\"\"Create Building instance from workbook.\n\n        Args:\n            wb: WEBPRO input workbook instance.\n            ver: WEBPRO input workbook version (v2 or v3).\n        \"\"\"\n        ws = wb[\"1) \u5ba4\u4ed5\u69d8\"]\n\n        if ver == \"v2\":\n            address = {\n                \"min_row\": 11,\n                \"floor\": \"A\",\n                \"name\": \"B\",\n                \"main_building_type\": \"C\",\n                \"building_type\": \"C\",\n                \"room_type\": \"D\",\n                \"room_area\": \"E\",\n                \"floor_height\": \"F\",\n                \"ceiling_height\": \"G\",\n                \"building_model_type\": \"L\",\n                \"info\": \"M\",\n            }\n        elif ver == \"v3\":\n            address = {\n                \"min_row\": 11,\n                \"floor\": \"A\",\n                \"name\": \"B\",\n                \"main_building_type\": \"C\",\n                \"building_type\": \"D\",\n                \"room_type\": \"E\",\n                \"room_area\": \"F\",\n                \"floor_height\": \"G\",\n                \"ceiling_height\": \"H\",\n                \"building_model_type\": \"M\",\n                \"info\": \"N\",\n            }\n        else:\n            raise ValueError(f\"Invalid version: {ver}\")\n\n        rooms = {}\n        for i_row in range(address[\"min_row\"], 999):\n            # break if the first cell is empty or white space\n            if (\n                ws[f\"{address['floor']}{i_row}\"].value is None\n                or not str(ws[f\"{address['floor']}{i_row}\"].value).strip()\n            ):\n                break\n\n            floor = ws[f\"{address['floor']}{i_row}\"].value\n            name = ws[f\"{address['name']}{i_row}\"].value\n            room_key = f\"{floor}_{name}\"\n\n            rooms[room_key] = Room(\n                main_building_type=ws[f\"{address['main_building_type']}{i_row}\"].value,\n                building_type=ws[f\"{address['building_type']}{i_row}\"].value,\n                room_type=ws[f\"{address['room_type']}{i_row}\"].value,\n                room_area=ws[f\"{address['room_area']}{i_row}\"].value,\n                floor_height=ws[f\"{address['floor_height']}{i_row}\"].value,\n                ceiling_height=ws[f\"{address['ceiling_height']}{i_row}\"].value,\n                zone=None,  # TODO: check necessity (builelib)\n                building_model_type=ws[f\"{address['building_model_type']}{i_row}\"].value,\n                info=ws[f\"{address['info']}{i_row}\"].value,\n            )\n\n        return cls(root=rooms)\n</code></pre>"},{"location":"reference/truzt/room_model/#truzt.room_model.Rooms.from_workbook","title":"<code>from_workbook(wb, ver='v3')</code>  <code>classmethod</code>","text":"<p>Create Building instance from workbook.</p> <p>Parameters:</p> Name Type Description Default <code>wb</code> <code>Workbook</code> <p>WEBPRO input workbook instance.</p> required <code>ver</code> <code>Literal['v2', 'v3']</code> <p>WEBPRO input workbook version (v2 or v3).</p> <code>'v3'</code> Source code in <code>truzt/room_model.py</code> <pre><code>@classmethod\ndef from_workbook(cls, wb: Workbook, ver: Literal[\"v2\", \"v3\"] = \"v3\") -&gt; \"Rooms\":\n    \"\"\"Create Building instance from workbook.\n\n    Args:\n        wb: WEBPRO input workbook instance.\n        ver: WEBPRO input workbook version (v2 or v3).\n    \"\"\"\n    ws = wb[\"1) \u5ba4\u4ed5\u69d8\"]\n\n    if ver == \"v2\":\n        address = {\n            \"min_row\": 11,\n            \"floor\": \"A\",\n            \"name\": \"B\",\n            \"main_building_type\": \"C\",\n            \"building_type\": \"C\",\n            \"room_type\": \"D\",\n            \"room_area\": \"E\",\n            \"floor_height\": \"F\",\n            \"ceiling_height\": \"G\",\n            \"building_model_type\": \"L\",\n            \"info\": \"M\",\n        }\n    elif ver == \"v3\":\n        address = {\n            \"min_row\": 11,\n            \"floor\": \"A\",\n            \"name\": \"B\",\n            \"main_building_type\": \"C\",\n            \"building_type\": \"D\",\n            \"room_type\": \"E\",\n            \"room_area\": \"F\",\n            \"floor_height\": \"G\",\n            \"ceiling_height\": \"H\",\n            \"building_model_type\": \"M\",\n            \"info\": \"N\",\n        }\n    else:\n        raise ValueError(f\"Invalid version: {ver}\")\n\n    rooms = {}\n    for i_row in range(address[\"min_row\"], 999):\n        # break if the first cell is empty or white space\n        if (\n            ws[f\"{address['floor']}{i_row}\"].value is None\n            or not str(ws[f\"{address['floor']}{i_row}\"].value).strip()\n        ):\n            break\n\n        floor = ws[f\"{address['floor']}{i_row}\"].value\n        name = ws[f\"{address['name']}{i_row}\"].value\n        room_key = f\"{floor}_{name}\"\n\n        rooms[room_key] = Room(\n            main_building_type=ws[f\"{address['main_building_type']}{i_row}\"].value,\n            building_type=ws[f\"{address['building_type']}{i_row}\"].value,\n            room_type=ws[f\"{address['room_type']}{i_row}\"].value,\n            room_area=ws[f\"{address['room_area']}{i_row}\"].value,\n            floor_height=ws[f\"{address['floor_height']}{i_row}\"].value,\n            ceiling_height=ws[f\"{address['ceiling_height']}{i_row}\"].value,\n            zone=None,  # TODO: check necessity (builelib)\n            building_model_type=ws[f\"{address['building_model_type']}{i_row}\"].value,\n            info=ws[f\"{address['info']}{i_row}\"].value,\n        )\n\n    return cls(root=rooms)\n</code></pre>"},{"location":"reference/truzt/room_model/#truzt.room_model.Zone","title":"<code>Zone</code>","text":"<p>               Bases: <code>BaseConfigModel</code></p> <p>Zone info.</p> <p>Attributes:</p> Name Type Description <code>zone_area</code> <code>Optional[float]</code> <p>\u30be\u30fc\u30f3\u9762\u7a4d</p> Source code in <code>truzt/room_model.py</code> <pre><code>class Zone(BaseConfigModel):\n    \"\"\"Zone info.\n\n    Attributes:\n        zone_area: \u30be\u30fc\u30f3\u9762\u7a4d\n    \"\"\"\n\n    zone_area: Optional[float] = Field(ge=0)\n</code></pre>"},{"location":"reference/truzt/room_model/#truzt.room_model.Zones","title":"<code>Zones</code>","text":"<p>               Bases: <code>RootModel</code></p> <p>Zones dict.</p> Source code in <code>truzt/room_model.py</code> <pre><code>class Zones(RootModel):\n    \"\"\"Zones dict.\"\"\"\n\n    root: dict[str, Zone]\n</code></pre>"},{"location":"reference/truzt/secondary_pump_system_model/","title":"secondary_pump_system_model","text":"<p>Module for defining the SecondaryPumpSystem model.</p>"},{"location":"reference/truzt/secondary_pump_system_model/#truzt.secondary_pump_system_model.SecondaryPump","title":"<code>SecondaryPump</code>","text":"<p>               Bases: <code>BaseConfigModel</code></p> <p>Secondary pump.</p> <p>Attributes:</p> Name Type Description <code>temperature_difference</code> <code>Optional[float]</code> <p>\u8a2d\u8a08\u6e29\u5ea6\u5dee</p> <code>is_staging_control</code> <code>Optional[Literal['\u6709', '\u7121']]</code> <p>\u53f0\u6570\u5236\u5fa1\u306e\u6709\u7121</p> <code>secondary_pump</code> <code>Optional[list[SecondaryPumpItem]]</code> <p>list of SecondaryPumpItem</p> Source code in <code>truzt/secondary_pump_system_model.py</code> <pre><code>class SecondaryPump(BaseConfigModel):\n    \"\"\"Secondary pump.\n\n    Attributes:\n        temperature_difference: \u8a2d\u8a08\u6e29\u5ea6\u5dee\n        is_staging_control: \u53f0\u6570\u5236\u5fa1\u306e\u6709\u7121\n        secondary_pump: list of SecondaryPumpItem\n    \"\"\"\n\n    temperature_difference: Optional[float] = Field(\n        None,\n        ge=0.0,\n    )\n    is_staging_control: Optional[Literal[\"\u6709\", \"\u7121\"]] = Field(\n        None,\n        alias=\"isStagingControl\",  # NOTE: for builelib compatibility\n    )\n    secondary_pump: Optional[list[SecondaryPumpItem]] = None\n</code></pre>"},{"location":"reference/truzt/secondary_pump_system_model/#truzt.secondary_pump_system_model.SecondaryPumpItem","title":"<code>SecondaryPumpItem</code>","text":"<p>               Bases: <code>BaseConfigModel</code></p> <p>Secondary pump item.</p> <p>Attributes:</p> Name Type Description <code>number</code> <code>Optional[int]</code> <p>\u53f0\u6570</p> <code>rated_water_flow_rate</code> <code>Optional[float]</code> <p>\u5b9a\u683c\u6d41\u91cf</p> <code>rated_power_consumption</code> <code>Optional[float]</code> <p>\u5b9a\u683c\u6d88\u8cbb\u96fb\u529b</p> <code>control_type</code> <code>Optional[Literal['\u7121', '\u5b9a\u6d41\u91cf\u5236\u5fa1', '\u56de\u8ee2\u6570\u5236\u5fa1']]</code> <p>\u5236\u5fa1\u65b9\u5f0f</p> <code>min_opening_rate</code> <code>Optional[float]</code> <p>\u6700\u5c0f\u6d41\u91cf\u6bd4</p> <code>info</code> <code>Optional[str]</code> <p>\u5099\u8003</p> Source code in <code>truzt/secondary_pump_system_model.py</code> <pre><code>class SecondaryPumpItem(BaseConfigModel):\n    \"\"\"Secondary pump item.\n\n    Attributes:\n        number: \u53f0\u6570\n        rated_water_flow_rate: \u5b9a\u683c\u6d41\u91cf\n        rated_power_consumption: \u5b9a\u683c\u6d88\u8cbb\u96fb\u529b\n        control_type: \u5236\u5fa1\u65b9\u5f0f\n        min_opening_rate: \u6700\u5c0f\u6d41\u91cf\u6bd4\n        info: \u5099\u8003\n    \"\"\"\n\n    number: Optional[int] = Field(\n        None,\n        ge=0,\n    )\n    rated_water_flow_rate: Optional[float] = Field(\n        None,\n        ge=0.0,\n    )\n    rated_power_consumption: Optional[float] = Field(\n        None,\n        ge=0.0,\n    )\n    control_type: Optional[Literal[\"\u7121\", \"\u5b9a\u6d41\u91cf\u5236\u5fa1\", \"\u56de\u8ee2\u6570\u5236\u5fa1\"]] = Field(\n        None,\n        alias=\"ContolType\",  # NOTE: for builelib compatibility (TYPO)\n    )\n    min_opening_rate: Optional[float] = Field(\n        None,\n        ge=0.0,\n        le=100.0,\n    )\n    info: Optional[str] = None\n</code></pre>"},{"location":"reference/truzt/secondary_pump_system_model/#truzt.secondary_pump_system_model.SecondaryPumpSystem","title":"<code>SecondaryPumpSystem</code>","text":"<p>               Bases: <code>BaseConfigModel</code></p> <p>Secondary pump system.</p> <p>Attributes:</p> Name Type Description <code>cooling</code> <code>Optional[SecondaryPump]</code> <p>\u51b7\u623f\u7528\u30b9\u30da\u30c3\u30af</p> <code>heating</code> <code>Optional[SecondaryPump]</code> <p>\u6696\u623f\u7528\u30b9\u30da\u30c3\u30af</p> Source code in <code>truzt/secondary_pump_system_model.py</code> <pre><code>class SecondaryPumpSystem(BaseConfigModel):\n    \"\"\"Secondary pump system.\n\n    Attributes:\n        cooling: \u51b7\u623f\u7528\u30b9\u30da\u30c3\u30af\n        heating: \u6696\u623f\u7528\u30b9\u30da\u30c3\u30af\n    \"\"\"\n\n    cooling: Optional[SecondaryPump] = Field(\n        None,\n        alias=\"\u51b7\u623f\",  # NOTE: for builelib compatibility\n    )\n    heating: Optional[SecondaryPump] = Field(\n        None,\n        alias=\"\u6696\u623f\",  # NOTE: for builelib compatibility\n    )\n</code></pre>"},{"location":"reference/truzt/shading_configure_model/","title":"shading_configure_model","text":"<p>Module for defining the ShadingConfigure model.</p>"},{"location":"reference/truzt/shading_configure_model/#truzt.shading_configure_model.ShadingConfigure","title":"<code>ShadingConfigure</code>","text":"<p>               Bases: <code>BaseConfigModel</code></p> <p>shading configure model.</p> <p>Attributes:</p> Name Type Description <code>shading_effect_c</code> <code>Optional[float]</code> <p>shading effect coefficient for cooling</p> <code>shading_effect_h</code> <code>Optional[float]</code> <p>shading effect coefficient for heating</p> <code>x1</code> <code>Optional[float]</code> <p>NOT IMPLEMENTED</p> <code>x2</code> <code>Optional[float]</code> <p>NOT IMPLEMENTED</p> <code>x3</code> <code>Optional[float]</code> <p>NOT IMPLEMENTED</p> <code>y1</code> <code>Optional[float]</code> <p>NOT IMPLEMENTED</p> <code>y2</code> <code>Optional[float]</code> <p>NOT IMPLEMENTED</p> <code>y3</code> <code>Optional[float]</code> <p>NOT IMPLEMENTED</p> <code>zx_plus</code> <code>Optional[float]</code> <p>NOT IMPLEMENTED</p> <code>zx_minus</code> <code>Optional[float]</code> <p>NOT IMPLEMENTED</p> <code>zy_plus</code> <code>Optional[float]</code> <p>NOT IMPLEMENTED</p> <code>zy_minus</code> <code>Optional[float]</code> <p>NOT IMPLEMENTED</p> <code>info</code> <code>Optional[str]</code> Source code in <code>truzt/shading_configure_model.py</code> <pre><code>class ShadingConfigure(BaseConfigModel):\n    \"\"\"shading configure model.\n\n    Attributes:\n        shading_effect_c: shading effect coefficient for cooling\n        shading_effect_h: shading effect coefficient for heating\n        x1: NOT IMPLEMENTED\n        x2: NOT IMPLEMENTED\n        x3: NOT IMPLEMENTED\n        y1: NOT IMPLEMENTED\n        y2: NOT IMPLEMENTED\n        y3: NOT IMPLEMENTED\n        zx_plus: NOT IMPLEMENTED\n        zx_minus: NOT IMPLEMENTED\n        zy_plus: NOT IMPLEMENTED\n        zy_minus: NOT IMPLEMENTED\n        info:\n    \"\"\"\n\n    shading_effect_c: Optional[float] = Field(\n        None,\n        ge=0.0,\n        le=1.0,\n    )\n\n    shading_effect_h: Optional[float] = Field(\n        None,\n        ge=0.0,\n        le=1.0,\n    )\n\n    # not implemented also in builelib\n    # builelib\u3067\u306f\u65e5\u9664\u3051\u306e\u5f62\u72b6\u3063\u3066\u66f8\u3044\u3066\u3042\u3063\u305f\n    x1: Optional[float] = None\n    x2: Optional[float] = None\n    x3: Optional[float] = None\n    y1: Optional[float] = None\n    y2: Optional[float] = None\n    y3: Optional[float] = None\n    zx_plus: Optional[float] = None\n    zx_minus: Optional[float] = None\n    zy_plus: Optional[float] = None\n    zy_minus: Optional[float] = None\n    info: Optional[str] = None\n</code></pre>"},{"location":"reference/truzt/utils/","title":"utils","text":"<p>Utility functions.</p>"},{"location":"reference/truzt/utils/#truzt.utils.convert_wb_to_dict","title":"<code>convert_wb_to_dict(wb_path)</code>","text":"<p>Convert WEBPRO input workbook to dict.</p> <p>Parameters:</p> Name Type Description Default <code>wb_path</code> <code>Path</code> <p>The path to the Excel workbook file.</p> required Source code in <code>truzt/utils.py</code> <pre><code>def convert_wb_to_dict(wb_path: Path) -&gt; dict:\n    \"\"\"Convert WEBPRO input workbook to dict.\n\n    Args:\n        wb_path: The path to the Excel workbook file.\n    \"\"\"\n    wb = openpyxl.load_workbook(wb_path, read_only=True, data_only=True)\n\n    # TODO: implement webpro version check\n    ver = \"v3\"\n\n    # WEBPRO_SHEETS\u306e\u30b7\u30fc\u30c8\u304c\u3059\u3079\u3066\u5b58\u5728\u3059\u308b\u304b\u78ba\u8a8d\n    for sheet_name in WEBPRO_SHEETS:\n        if sheet_name not in wb.sheetnames:\n            raise ValueError(f\"Sheet named '{sheet_name}' is not found.\")\n\n    # building = Building.from_workbook(wb, ver=ver)\n    rooms = Rooms.from_workbook(wb, ver=ver)\n\n    # TODO: implement other models\n\n    model_dict = rooms.model_dump()\n\n    return model_dict\n</code></pre>"},{"location":"reference/truzt/utils/#truzt.utils.convert_wb_to_json","title":"<code>convert_wb_to_json(wb_path, json_path)</code>","text":"<p>Convert WEBPRO input workbook to JSON file.</p> <p>Parameters:</p> Name Type Description Default <code>wb_path</code> <code>Path</code> <p>The path to the Excel workbook file.</p> required <code>json_path</code> <code>Path</code> <p>The path to the output JSON file.</p> required Source code in <code>truzt/utils.py</code> <pre><code>def convert_wb_to_json(wb_path: Path, json_path: Path) -&gt; None:\n    \"\"\"Convert WEBPRO input workbook to JSON file.\n\n    Args:\n        wb_path: The path to the Excel workbook file.\n        json_path: The path to the output JSON file.\n    \"\"\"\n    model_dict = convert_wb_to_dict(wb_path)\n\n    with open(json_path, \"w\") as f:\n        json.dump(model_dict, f, indent=2, ensure_ascii=False)\n</code></pre>"},{"location":"reference/truzt/ventilation_room_model/","title":"ventilation_room_model","text":"<p>This module defines the VentilationRoom and VentilationUnitRef classes.</p> <p>Classes:</p> Name Description <code>VentilationUnitRef</code> <p>A class representing a reference to a ventilation unit.</p> <code>VentilationRoom</code> <p>A class representing a ventilation room.</p>"},{"location":"reference/truzt/ventilation_room_model/#truzt.ventilation_room_model.VentilationRoom","title":"<code>VentilationRoom</code>","text":"<p>               Bases: <code>BaseConfigModel</code></p> <p>Ventilation room.</p> <p>Attributes:</p> Name Type Description <code>ventilation_type</code> <code>Optional[Literal['\u4e00\u7a2e\u63db\u6c17', '\u4e8c\u7a2e\u63db\u6c17', '\u4e09\u7a2e\u63db\u6c17']]</code> <p>\u63db\u6c17\u65b9\u5f0f</p> <code>ventilation_unit_ref</code> <code>dict[str, VentilationUnitRef]</code> <p>dict[str, VentilationUnitRef]</p> Source code in <code>truzt/ventilation_room_model.py</code> <pre><code>class VentilationRoom(BaseConfigModel):\n    \"\"\"Ventilation room.\n\n    Attributes:\n        ventilation_type: \u63db\u6c17\u65b9\u5f0f\n        ventilation_unit_ref: dict[str, VentilationUnitRef]\n    \"\"\"\n\n    ventilation_type: Optional[Literal[\"\u4e00\u7a2e\u63db\u6c17\", \"\u4e8c\u7a2e\u63db\u6c17\", \"\u4e09\u7a2e\u63db\u6c17\"]] = None\n    ventilation_unit_ref: dict[str, VentilationUnitRef]\n</code></pre>"},{"location":"reference/truzt/ventilation_room_model/#truzt.ventilation_room_model.VentilationUnitRef","title":"<code>VentilationUnitRef</code>","text":"<p>               Bases: <code>BaseConfigModel</code></p> <p>TODO: VentilationUnitRef.</p> <p>Attributes:</p> Name Type Description <code>unit_type</code> <code>Optional[Literal['\u7d66\u6c17', '\u6392\u6c17', '\u7a7a\u8abf', '\u5faa\u74b0']]</code> <p>\u6a5f\u5668\u306e\u7a2e\u985e</p> <code>info</code> <code>Optional[str]</code> <p>\u5099\u8003</p> Source code in <code>truzt/ventilation_room_model.py</code> <pre><code>class VentilationUnitRef(BaseConfigModel):\n    \"\"\"TODO: VentilationUnitRef.\n\n    Attributes:\n        unit_type: \u6a5f\u5668\u306e\u7a2e\u985e\n        info: \u5099\u8003\n    \"\"\"\n\n    unit_type: Optional[Literal[\"\u7d66\u6c17\", \"\u6392\u6c17\", \"\u7a7a\u8abf\", \"\u5faa\u74b0\"]] = None\n    info: Optional[str] = None\n</code></pre>"},{"location":"reference/truzt/ventilation_unit_model/","title":"ventilation_unit_model","text":"<p>This module defines the VentilationUnit class.</p> <p>Classes:</p> Name Description <code>VentilationUnit</code> <p>A class representing a ventilation unit.</p>"},{"location":"reference/truzt/ventilation_unit_model/#truzt.ventilation_unit_model.VentilationUnit","title":"<code>VentilationUnit</code>","text":"<p>               Bases: <code>BaseConfigModel</code></p> <p>Ventilation unit.</p> <p>Attributes:</p> Name Type Description <code>number</code> <code>int</code> <p>\u53f0\u6570</p> <code>fan_air_volume</code> <code>Optional[float]</code> <p>\u8a2d\u8a08\u98a8\u91cf</p> <code>motor_rated_power</code> <code>Optional[float]</code> <p>\u5b9a\u683c\u96fb\u52d5\u6a5f\u51fa\u529b</p> <code>power_consumption</code> <code>Optional[float]</code> <p>\u5b9a\u683c\u6d88\u8cbb\u96fb\u529b</p> <code>high_efficiency_motor</code> <code>Literal['\u6709', '\u7121']</code> <p>\u9ad8\u52b9\u7387\u96fb\u52d5\u6a5f\u306e\u6709\u7121</p> <code>inverter</code> <code>Literal['\u6709', '\u7121']</code> <p>\u30a4\u30f3\u30d0\u30fc\u30bf\u306e\u6709\u7121</p> <code>air_volume_control</code> <code>Literal['\u7121', 'CO\u6fc3\u5ea6\u5236\u5fa1', '\u6e29\u5ea6\u5236\u5fa1']</code> <p>\u9001\u98a8\u91cf\u5236\u5fa1</p> <code>ventilation_room_type</code> <code>Optional[Union[Literal['\u96fb\u6c17\u5ba4', '\u6a5f\u68b0\u5ba4', '\u30a8\u30ec\u30d9\u30fc\u30bf\u6a5f\u68b0\u5ba4', '\u305d\u306e\u4ed6'], float]]</code> <p>\u5bfe\u8c61\u5ba4\u306e\u7528\u9014</p> <code>ac_cooling_capacity</code> <code>Optional[float]</code> <p>\u5fc5\u8981\u51b7\u5374\u80fd\u529b</p> <code>ac_ref_efficiency</code> <code>Optional[float]</code> <p>\u71b1\u6e90\u52b9\u7387(\u4e00\u6b21\u63db\u7b97\u5024)</p> <code>ac_pump_power</code> <code>Optional[float]</code> <p>\u30dd\u30f3\u30d7\u306e\u5b9a\u683c\u6d88\u8cbb\u96fb\u529b</p> <code>info</code> <code>Optional[str]</code> <p>\u5099\u8003</p> Source code in <code>truzt/ventilation_unit_model.py</code> <pre><code>class VentilationUnit(BaseConfigModel):\n    \"\"\"Ventilation unit.\n\n    Attributes:\n        number: \u53f0\u6570\n        fan_air_volume: \u8a2d\u8a08\u98a8\u91cf\n        motor_rated_power: \u5b9a\u683c\u96fb\u52d5\u6a5f\u51fa\u529b\n        power_consumption: \u5b9a\u683c\u6d88\u8cbb\u96fb\u529b\n        high_efficiency_motor: \u9ad8\u52b9\u7387\u96fb\u52d5\u6a5f\u306e\u6709\u7121\n        inverter: \u30a4\u30f3\u30d0\u30fc\u30bf\u306e\u6709\u7121\n        air_volume_control: \u9001\u98a8\u91cf\u5236\u5fa1\n        ventilation_room_type: \u5bfe\u8c61\u5ba4\u306e\u7528\u9014\n        ac_cooling_capacity: \u5fc5\u8981\u51b7\u5374\u80fd\u529b\n        ac_ref_efficiency: \u71b1\u6e90\u52b9\u7387(\u4e00\u6b21\u63db\u7b97\u5024)\n        ac_pump_power: \u30dd\u30f3\u30d7\u306e\u5b9a\u683c\u6d88\u8cbb\u96fb\u529b\n        info: \u5099\u8003\n    \"\"\"\n\n    number: int = Field(ge=0)\n    fan_air_volume: Optional[float] = Field(ge=0.0)\n    motor_rated_power: Optional[float] = Field(\n        ge=0.0,\n        alias=\"MoterRatedPower\",  # NOTE: for builelib compatibility (TYPO)\n    )\n    power_consumption: Optional[float] = Field(ge=0.0)\n    high_efficiency_motor: Literal[\"\u6709\", \"\u7121\"]\n    inverter: Literal[\"\u6709\", \"\u7121\"]\n    air_volume_control: Literal[\"\u7121\", \"CO\u6fc3\u5ea6\u5236\u5fa1\", \"\u6e29\u5ea6\u5236\u5fa1\"]\n    ventilation_room_type: Optional[\n        Union[Literal[\"\u96fb\u6c17\u5ba4\", \"\u6a5f\u68b0\u5ba4\", \"\u30a8\u30ec\u30d9\u30fc\u30bf\u6a5f\u68b0\u5ba4\", \"\u305d\u306e\u4ed6\"], float]\n    ]\n    ac_cooling_capacity: Optional[float] = Field(\n        ge=0.0,\n        alias=\"AC_CoolingCapacity\",  # NOTE: for builelib compatibility\n    )\n    ac_ref_efficiency: Optional[float] = Field(\n        ge=0.0,\n        alias=\"AC_RefEfficiency\",  # NOTE: for builelib compatibility\n    )\n    ac_pump_power: Optional[float] = Field(\n        ge=0.0,\n        alias=\"AC_PumpPower\",  # NOTE: for builelib compatibility\n    )\n    info: Optional[str]\n</code></pre>"},{"location":"reference/truzt/wall_configure_model/","title":"wall_configure_model","text":"<p>This module defines the WallConfigure class and the Layer class.</p> <p>Classes:</p> Name Description <code>Layer</code> <p>A class representing a building material layer.</p> <code>WallConfigure</code> <p>A class representing the configuration of a wall.</p>"},{"location":"reference/truzt/wall_configure_model/#truzt.wall_configure_model.Layer","title":"<code>Layer</code>","text":"<p>               Bases: <code>BaseConfigModel</code></p> <p>\u5efa\u6750\u30ec\u30a4\u30e4\u30fc.</p> <p>Attributes:</p> Name Type Description <code>material_id</code> <code>Optional[str]</code> <p>\u65ad\u71b1\u6750\u306e\u7a2e\u985e</p> <code>conductivity</code> <code>Optional[float]</code> <p>\u71b1\u4f1d\u5c0e\u7387</p> <code>thickness</code> <code>Optional[float]</code> <p>\u539a\u307f</p> <code>info</code> <code>Optional[str]</code> <p>\u5099\u8003</p> Source code in <code>truzt/wall_configure_model.py</code> <pre><code>class Layer(BaseConfigModel):\n    \"\"\"\u5efa\u6750\u30ec\u30a4\u30e4\u30fc.\n\n    Attributes:\n        material_id: \u65ad\u71b1\u6750\u306e\u7a2e\u985e\n        conductivity: \u71b1\u4f1d\u5c0e\u7387\n        thickness: \u539a\u307f\n        info: \u5099\u8003\n    \"\"\"\n\n    material_id: Optional[str] = Field(\n        None,\n        alias=\"materialID\",  # NOTE: for builelib compatibility\n    )\n    conductivity: Optional[float] = Field(\n        None,\n        gt=0.0,\n        alias=\"conductivity\",  # NOTE: for builelib compatibility\n    )\n    thickness: Optional[float] = Field(\n        None,\n        ge=0,\n        alias=\"thickness\",  # NOTE: for builelib compatibility\n    )\n    info: Optional[str] = None\n</code></pre>"},{"location":"reference/truzt/wall_configure_model/#truzt.wall_configure_model.WallConfigure","title":"<code>WallConfigure</code>","text":"<p>               Bases: <code>BaseConfigModel</code></p> <p>\u5916\u58c1\u69cb\u6210.</p> <p>Attributes:</p> Name Type Description <code>wall_type_webpro</code> <code>Literal['\u5916\u58c1', '\u63a5\u5730\u58c1']</code> <p>\u5916\u58c1\u306e\u7a2e\u985e(WEBPRO)</p> <code>structure_type</code> <code>Literal['\u6728\u9020', '\u9244\u7b4b\u30b3\u30f3\u30af\u30ea\u30fc\u30c8\u9020\u7b49', '\u9244\u9aa8\u9020', '\u305d\u306e\u4ed6']</code> <p>\u69cb\u9020\u7a2e\u5225</p> <code>solar_absorption_ratio</code> <code>Optional[float]</code> <p>\u65e5\u5c04\u5438\u53ce\u7387</p> <code>input_method</code> <code>Optional[Literal['\u71b1\u8cab\u6d41\u7387\u3092\u5165\u529b', '\u5efa\u6750\u69cb\u6210\u3092\u5165\u529b', '\u65ad\u71b1\u6750\u7a2e\u985e\u3092\u5165\u529b']]</code> <p>\u65ad\u71b1\u6027\u80fd\u306e\u5165\u529b\u65b9\u6cd5</p> <code>material_id</code> <code>Optional[str]</code> <p>\u65ad\u71b1\u6750\u306e\u7a2e\u985e</p> <code>conductivity</code> <code>Optional[float]</code> <p>\u71b1\u4f1d\u5c0e\u7387</p> <code>layers</code> <code>Optional[list[Layer]]</code> <p>list of Layer instance</p> <code>thickness</code> <code>Optional[float]</code> <p>\u539a\u307f</p> <code>uvalue</code> <code>Optional[float]</code> <p>\u71b1\u8cab\u6d41\u7387</p> <code>info</code> <code>Optional[str]</code> <p>\u5099\u8003</p> Source code in <code>truzt/wall_configure_model.py</code> <pre><code>class WallConfigure(BaseConfigModel):\n    \"\"\"\u5916\u58c1\u69cb\u6210.\n\n    Attributes:\n        wall_type_webpro: \u5916\u58c1\u306e\u7a2e\u985e(WEBPRO)\n        structure_type: \u69cb\u9020\u7a2e\u5225\n        solar_absorption_ratio: \u65e5\u5c04\u5438\u53ce\u7387\n        input_method: \u65ad\u71b1\u6027\u80fd\u306e\u5165\u529b\u65b9\u6cd5\n        material_id: \u65ad\u71b1\u6750\u306e\u7a2e\u985e\n        conductivity: \u71b1\u4f1d\u5c0e\u7387\n        layers: list of Layer instance\n        thickness: \u539a\u307f\n        uvalue: \u71b1\u8cab\u6d41\u7387\n        info: \u5099\u8003\n    \"\"\"\n\n    wall_type_webpro: Literal[\"\u5916\u58c1\", \"\u63a5\u5730\u58c1\"] = Field(\n        None,\n        alias=\"wall_type_webpro\",  # NOTE: for builelib compatibility\n    )\n\n    structure_type: Literal[\n        \"\u6728\u9020\",\n        \"\u9244\u7b4b\u30b3\u30f3\u30af\u30ea\u30fc\u30c8\u9020\u7b49\",\n        \"\u9244\u9aa8\u9020\",\n        \"\u305d\u306e\u4ed6\",\n    ] = Field(\n        None,\n        alias=\"structureType\",  # NOTE: for builelib compatibility\n    )\n\n    solar_absorption_ratio: Optional[float] = Field(\n        None,\n        ge=0.0,\n        le=1.0,\n        alias=\"solarAbsorptionRatio\",  # NOTE: for builelib compatibility\n    )\n\n    input_method: Optional[Literal[\"\u71b1\u8cab\u6d41\u7387\u3092\u5165\u529b\", \"\u5efa\u6750\u69cb\u6210\u3092\u5165\u529b\", \"\u65ad\u71b1\u6750\u7a2e\u985e\u3092\u5165\u529b\"]] = Field(\n        None,\n        alias=\"inputMethod\",  # NOTE: for builelib compatibility\n    )\n\n    material_id: Optional[str] = Field(\n        None,\n        alias=\"materialID\",  # NOTE: for builelib compatibility\n    )\n\n    conductivity: Optional[float] = Field(\n        None,\n        ge=0.0,\n        alias=\"conductivity\",  # NOTE: for builelib compatibility\n    )\n\n    layers: Optional[list[Layer]] = Field(\n        None,\n        alias=\"layers\",  # NOTE: for builelib compatibility\n    )\n\n    thickness: Optional[float] = Field(\n        None,\n        gt=0,\n        alias=\"thickness\",  # NOTE: for builelib compatibility\n    )\n\n    uvalue: Optional[float] = Field(\n        None,\n        gt=0.0,\n    )\n\n    info: Optional[str] = None\n</code></pre>"},{"location":"reference/truzt/webpro_model/","title":"webpro_model","text":"<p>This module defines the WebproModel class.</p> <p>Classes:</p> Name Description <code>WebproModel</code> <p>A class representing the WEBPRO model.</p>"},{"location":"reference/truzt/webpro_model/#truzt.webpro_model.WebproModel","title":"<code>WebproModel</code>","text":"<p>               Bases: <code>BaseConfigModel</code></p> <p>WEBPRO model.</p> <p>Attributes:</p> Name Type Description <code>building</code> <code>Building</code> <p>\u5efa\u7269\u60c5\u5831</p> <code>rooms</code> <code>Rooms</code> <p>\u5ba4\u60c5\u5831</p> <code>air_conditioning_zone</code> <code>Optional[dict[str, AirConditioningZone]]</code> <p>\u7a7a\u8abf\u30be\u30fc\u30f3</p> <code>wall_configure</code> <code>Optional[dict[str, WallConfigure]]</code> <p>\u5916\u58c1\u69cb\u6210</p> <code>window_configure</code> <code>Optional[dict[str, WindowConfigure]]</code> <p>\u7a93\u4ed5\u69d8</p> <code>envelope_set</code> <code>Optional[dict[str, EnvelopeSet]]</code> <p>\u5916\u76ae</p> <code>shading_configure</code> <code>Optional[dict[str, ShadingConfigure]]</code> <p>\u65e5\u9664\u3051(?)</p> <code>heat_source_system</code> <code>Optional[dict[str, ShadingConfigure]]</code> <p>\u71b1\u6e90</p> <code>secondary_pump_system</code> <code>Optional[dict[str, SecondaryPumpSystem]]</code> <p>2\u6b21\u30dd\u30f3\u30d7</p> <code>air_handling_system</code> <code>Optional[dict[str, AirHandlingSystem]]</code> <p>\u7a7a\u8abf\u30b7\u30b9\u30c6\u30e0</p> <code>ventilation_room</code> <code>Optional[dict[str, VentilationRoom]]</code> <p>\u63db\u6c17\u5ba4</p> <code>ventilation_unit</code> <code>Optional[dict[str, VentilationUnit]]</code> <p>\u63db\u6c17\u9001\u98a8\u6a5f</p> <code>lighting_systems</code> <code>Optional[dict[str, LightingRoom]]</code> <p>\u7167\u660e</p> <code>hotwater_room</code> <code>Optional[dict[str, HotWaterRoom]]</code> <p>\u7d66\u6e6f\u5ba4</p> <code>hotwater_supply_systems</code> <code>Optional[dict[str, HotWaterSupplySystem]]</code> <p>\u7d66\u6e6f\u6a5f\u5668</p> <code>elevators</code> <code>Optional[dict[str, Elevators]]</code> <p>\u6607\u964d\u6a5f</p> <code>photovoltaic_systems</code> <code>Optional[dict[str, PhotovoltaicSystem]]</code> <p>\u592a\u967d\u5149\u767a\u96fb</p> <code>cogeneration_systems</code> <code>Optional[dict[str, CogenerationSystem]]</code> <p>\u30b3\u30b8\u30a7\u30cd\u30ec\u30fc\u30b7\u30e7\u30f3</p> Source code in <code>truzt/webpro_model.py</code> <pre><code>class WebproModel(BaseConfigModel):\n    \"\"\"WEBPRO model.\n\n    Attributes:\n        building: \u5efa\u7269\u60c5\u5831\n        rooms: \u5ba4\u60c5\u5831\n        air_conditioning_zone: \u7a7a\u8abf\u30be\u30fc\u30f3\n        wall_configure: \u5916\u58c1\u69cb\u6210\n        window_configure: \u7a93\u4ed5\u69d8\n        envelope_set: \u5916\u76ae\n        shading_configure: \u65e5\u9664\u3051(?)\n        heat_source_system: \u71b1\u6e90\n        secondary_pump_system: 2\u6b21\u30dd\u30f3\u30d7\n        air_handling_system: \u7a7a\u8abf\u30b7\u30b9\u30c6\u30e0\n        ventilation_room: \u63db\u6c17\u5ba4\n        ventilation_unit: \u63db\u6c17\u9001\u98a8\u6a5f\n        lighting_systems: \u7167\u660e\n        hotwater_room: \u7d66\u6e6f\u5ba4\n        hotwater_supply_systems: \u7d66\u6e6f\u6a5f\u5668\n        elevators: \u6607\u964d\u6a5f\n        photovoltaic_systems: \u592a\u967d\u5149\u767a\u96fb\n        cogeneration_systems: \u30b3\u30b8\u30a7\u30cd\u30ec\u30fc\u30b7\u30e7\u30f3\n    \"\"\"\n\n    building: Building = Field(\n        None,\n    )\n    rooms: Rooms = Field(\n        None,\n    )\n    air_conditioning_zone: Optional[dict[str, AirConditioningZone]] = Field(\n        None,\n    )\n    wall_configure: Optional[dict[str, WallConfigure]] = Field(\n        None,\n    )\n    window_configure: Optional[dict[str, WindowConfigure]] = Field(\n        None,\n    )\n    envelope_set: Optional[dict[str, EnvelopeSet]] = Field(\n        None,\n    )\n    shading_configure: Optional[dict[str, ShadingConfigure]] = Field(\n        None,\n    )\n    heatsource_system: Optional[dict[str, HeatSourceSystem]] = Field(\n        None,\n    )\n    secondary_pump_system: Optional[dict[str, SecondaryPumpSystem]] = Field(\n        None,\n    )\n    air_handling_system: Optional[dict[str, AirHandlingSystem]] = Field(\n        None,\n    )\n    ventilation_room: Optional[dict[str, VentilationRoom]] = Field(\n        None,\n    )\n    ventilation_unit: Optional[dict[str, VentilationUnit]] = Field(\n        None,\n    )\n    lighting_systems: Optional[dict[str, LightingRoom]] = Field(\n        None,\n    )\n    hotwater_room: Optional[dict[str, HotWaterRoom]] = Field(\n        None,\n    )\n    hotwater_supply_systems: Optional[dict[str, HotWaterSupplySystem]] = Field(\n        None,\n    )\n    elevators: Optional[dict[str, Elevators]] = Field(\n        None,\n    )\n    photovoltaic_systems: Optional[dict[str, PhotovoltaicSystem]] = Field(\n        None,\n    )\n    cogeneration_systems: Optional[dict[str, CogenerationSystem]] = Field(\n        None,\n    )\n    # TODO: builelib SP\u30b7\u30fc\u30c8\u672a\u5bfe\u5fdc\n    special_input_data: Optional[dict[str, Any]] = Field(\n        None,\n    )\n</code></pre>"},{"location":"reference/truzt/webpro_options/","title":"webpro_options","text":"<p>truzt.webpro_options.</p> <p>webpro choices options.</p>"},{"location":"reference/truzt/webpro_options/#truzt.webpro_options.BuildingType","title":"<code>BuildingType = Literal['\u4e8b\u52d9\u6240\u7b49', '\u30db\u30c6\u30eb\u7b49', '\u75c5\u9662\u7b49', '\u767e\u8ca8\u5e97\u7b49', '\u5b66\u6821\u7b49', '\u98f2\u98df\u5e97\u7b49', '\u96c6\u4f1a\u6240\u7b49', '\u5de5\u5834\u7b49', '\u5171\u540c\u4f4f\u5b85']</code>  <code>module-attribute</code>","text":"<p>Building type options.</p>"},{"location":"reference/truzt/webpro_options/#truzt.webpro_options.RoomTypeCommunity","title":"<code>RoomTypeCommunity = Literal['\u30a2\u30b9\u30ec\u30c1\u30c3\u30af\u5834\u306e\u904b\u52d5\u5ba4', '\u30a2\u30b9\u30ec\u30c1\u30c3\u30af\u5834\u306e\u30ed\u30d3\u30fc', '\u30a2\u30b9\u30ec\u30c1\u30c3\u30af\u5834\u306e\u4fbf\u6240', '\u30a2\u30b9\u30ec\u30c1\u30c3\u30af\u5834\u306e\u55ab\u7159\u5ba4', '\u516c\u5f0f\u7af6\u6280\u7528\u30b9\u30b1\u30fc\u30c8\u5834', '\u516c\u5f0f\u7af6\u6280\u7528\u4f53\u80b2\u9928', '\u4e00\u822c\u7af6\u6280\u7528\u30b9\u30b1\u30fc\u30c8\u5834', '\u4e00\u822c\u7af6\u6280\u7528\u4f53\u80b2\u9928', '\u30ec\u30af\u30ea\u30a8\u30fc\u30b7\u30e7\u30f3\u7528\u30b9\u30b1\u30fc\u30c8\u5834', '\u30ec\u30af\u30ea\u30a8\u30fc\u30b7\u30e7\u30f3\u7528\u4f53\u80b2\u9928', '\u7af6\u6280\u5834\u306e\u5ba2\u5e2d', '\u7af6\u6280\u5834\u306e\u30ed\u30d3\u30fc', '\u7af6\u6280\u5834\u306e\u4fbf\u6240', '\u7af6\u6280\u5834\u306e\u55ab\u7159\u5ba4', '\u516c\u8846\u6d74\u5834\u306e\u6d74\u5ba4', '\u516c\u8846\u6d74\u5834\u306e\u8131\u8863\u6240', '\u516c\u8846\u6d74\u5834\u306e\u4f11\u61a9\u5ba4', '\u516c\u8846\u6d74\u5834\u306e\u30ed\u30d3\u30fc', '\u516c\u8846\u6d74\u5834\u306e\u4fbf\u6240', '\u516c\u8846\u6d74\u5834\u306e\u55ab\u7159\u5ba4', '\u6620\u753b\u9928\u306e\u5ba2\u5e2d', '\u6620\u753b\u9928\u306e\u30ed\u30d3\u30fc', '\u6620\u753b\u9928\u306e\u4fbf\u6240', '\u6620\u753b\u9928\u306e\u55ab\u7159\u5ba4', '\u56f3\u66f8\u9928\u306e\u56f3\u66f8\u5ba4', '\u56f3\u66f8\u9928\u306e\u30ed\u30d3\u30fc', '\u56f3\u66f8\u9928\u306e\u4fbf\u6240', '\u56f3\u66f8\u9928\u306e\u55ab\u7159\u5ba4', '\u535a\u7269\u9928\u306e\u5c55\u793a\u5ba4', '\u535a\u7269\u9928\u306e\u30ed\u30d3\u30fc', '\u535a\u7269\u9928\u306e\u4fbf\u6240', '\u535a\u7269\u9928\u306e\u55ab\u7159\u5ba4', '\u5287\u5834\u306e\u697d\u5c4b', '\u5287\u5834\u306e\u821e\u53f0', '\u5287\u5834\u306e\u5ba2\u5e2d', '\u5287\u5834\u306e\u30ed\u30d3\u30fc', '\u5287\u5834\u306e\u4fbf\u6240', '\u5287\u5834\u306e\u55ab\u7159\u5ba4', '\u30ab\u30e9\u30aa\u30b1\u30dc\u30c3\u30af\u30b9', '\u30dc\u30fc\u30ea\u30f3\u30b0\u5834', '\u3071\u3061\u3093\u3053\u5c4b', '\u7af6\u99ac\u5834\u53c8\u306f\u7af6\u8f2a\u5834\u306e\u5ba2\u5e2d', '\u7af6\u99ac\u5834\u53c8\u306f\u7af6\u8f2a\u5834\u306e\u5238\u58f2\u5834', '\u7af6\u99ac\u5834\u53c8\u306f\u7af6\u8f2a\u5834\u306e\u5e97\u8217', '\u7af6\u99ac\u5834\u53c8\u306f\u7af6\u8f2a\u5834\u306e\u30ed\u30d3\u30fc', '\u7af6\u99ac\u5834\u53c8\u306f\u7af6\u8f2a\u5834\u306e\u4fbf\u6240', '\u7af6\u99ac\u5834\u53c8\u306f\u7af6\u8f2a\u5834\u306e\u55ab\u7159\u5ba4', '\u793e\u5bfa\u306e\u672c\u6bbf', '\u793e\u5bfa\u306e\u30ed\u30d3\u30fc', '\u793e\u5bfa\u306e\u4fbf\u6240', '\u793e\u5bfa\u306e\u55ab\u7159\u5ba4', '\u53a8\u623f', '\u5c4b\u5185\u99d0\u8eca\u5834', '\u6a5f\u68b0\u5ba4', '\u96fb\u6c17\u5ba4', '\u6e6f\u6cb8\u5ba4\u7b49', '\u98df\u54c1\u5eab\u7b49', '\u5370\u5237\u5ba4\u7b49', '\u5ec3\u68c4\u7269\u4fdd\u7ba1\u5834\u6240\u7b49', '\u975e\u4e3b\u8981\u5ba4']</code>  <code>module-attribute</code>","text":"<p>room type options for community space.</p>"},{"location":"reference/truzt/webpro_options/#truzt.webpro_options.RoomTypeDepartmentStore","title":"<code>RoomTypeDepartmentStore = Literal['\u5927\u578b\u5e97\u306e\u58f2\u5834', '\u5c02\u9580\u5e97\u306e\u58f2\u5834', '\u30b9\u30fc\u30d1\u30fc\u30de\u30fc\u30b1\u30c3\u30c8\u306e\u58f2\u5834', '\u8377\u3055\u3070\u304d\u5834', '\u4e8b\u52d9\u5ba4', '\u66f4\u8863\u5ba4\u53c8\u306f\u5009\u5eab', '\u30ed\u30d3\u30fc', '\u4fbf\u6240', '\u55ab\u7159\u5ba4', '\u53a8\u623f', '\u5c4b\u5185\u99d0\u8eca\u5834', '\u6a5f\u68b0\u5ba4', '\u96fb\u6c17\u5ba4', '\u6e6f\u6cb8\u5ba4\u7b49', '\u98df\u54c1\u5eab\u7b49', '\u5370\u5237\u5ba4\u7b49', '\u5ec3\u68c4\u7269\u4fdd\u7ba1\u5834\u6240\u7b49', '\u975e\u4e3b\u8981\u5ba4']</code>  <code>module-attribute</code>","text":"<p>room type options for department store.</p>"},{"location":"reference/truzt/webpro_options/#truzt.webpro_options.RoomTypeFactory","title":"<code>RoomTypeFactory = Literal['\u5009\u5eab', '\u5c4b\u5916\u99d0\u8eca\u5834\u53c8\u306f\u99d0\u8f2a\u5834']</code>  <code>module-attribute</code>","text":"<p>room type options for factory.</p>"},{"location":"reference/truzt/webpro_options/#truzt.webpro_options.RoomTypeHospital","title":"<code>RoomTypeHospital = Literal['\u75c5\u5ba4', '\u6d74\u5ba4\u7b49', '\u770b\u8b77\u8077\u54e1\u5ba4', '\u7d42\u65e5\u5229\u7528\u3055\u308c\u308b\u5eca\u4e0b', '\u7d42\u65e5\u5229\u7528\u3055\u308c\u308b\u30ed\u30d3\u30fc', '\u7d42\u65e5\u5229\u7528\u3055\u308c\u308b\u5171\u7528\u90e8\u306e\u4fbf\u6240', '\u7d42\u65e5\u5229\u7528\u3055\u308c\u308b\u55ab\u7159\u5ba4', '\u8a3a\u5bdf\u5ba4', '\u5f85\u5408\u5ba4', '\u624b\u8853\u5ba4', '\u691c\u67fb\u5ba4', '\u96c6\u4e2d\u6cbb\u7642\u5ba4', '\u89e3\u5256\u5ba4\u7b49', '\u30ec\u30b9\u30c8\u30e9\u30f3', '\u4e8b\u52d9\u5ba4', '\u66f4\u8863\u5ba4\u53c8\u306f\u5009\u5eab', '\u65e5\u4e2d\u306e\u307f\u5229\u7528\u3055\u308c\u308b\u5eca\u4e0b', '\u65e5\u4e2d\u306e\u307f\u5229\u7528\u3055\u308c\u308b\u30ed\u30d3\u30fc', '\u65e5\u4e2d\u306e\u307f\u5229\u7528\u3055\u308c\u308b\u5171\u7528\u90e8\u306e\u4fbf\u6240', '\u65e5\u4e2d\u306e\u307f\u5229\u7528\u3055\u308c\u308b\u55ab\u7159\u5ba4', '\u53a8\u623f', '\u5c4b\u5185\u99d0\u8eca\u5834', '\u6a5f\u68b0\u5ba4', '\u96fb\u6c17\u5ba4', '\u6e6f\u6cb8\u5ba4\u7b49', '\u98df\u54c1\u5eab\u7b49', '\u5370\u5237\u5ba4\u7b49', '\u5ec3\u68c4\u7269\u4fdd\u7ba1\u5834\u6240\u7b49', '\u975e\u4e3b\u8981\u5ba4']</code>  <code>module-attribute</code>","text":"<p>room type options for hospital.</p>"},{"location":"reference/truzt/webpro_options/#truzt.webpro_options.RoomTypeHotel","title":"<code>RoomTypeHotel = Literal['\u5ba2\u5ba4', '\u5ba2\u5ba4\u5185\u306e\u6d74\u5ba4\u7b49', '\u7d42\u65e5\u5229\u7528\u3055\u308c\u308b\u30d5\u30ed\u30f3\u30c8', '\u7d42\u65e5\u5229\u7528\u3055\u308c\u308b\u4e8b\u52d9\u5ba4', '\u7d42\u65e5\u5229\u7528\u3055\u308c\u308b\u5eca\u4e0b', '\u7d42\u65e5\u5229\u7528\u3055\u308c\u308b\u30ed\u30d3\u30fc', '\u7d42\u65e5\u5229\u7528\u3055\u308c\u308b\u5171\u7528\u90e8\u306e\u4fbf\u6240', '\u7d42\u65e5\u5229\u7528\u3055\u308c\u308b\u55ab\u7159\u5ba4', '\u5bb4\u4f1a\u5834', '\u4f1a\u8b70\u5ba4', '\u7d50\u5a5a\u5f0f\u5834', '\u30ec\u30b9\u30c8\u30e9\u30f3', '\u30e9\u30a6\u30f3\u30b8', '\u30d0\u30fc', '\u5e97\u8217', '\u793e\u54e1\u98df\u5802', '\u66f4\u8863\u5ba4\u53c8\u306f\u5009\u5eab', '\u65e5\u4e2d\u306e\u307f\u5229\u7528\u3055\u308c\u308b\u30d5\u30ed\u30f3\u30c8', '\u65e5\u4e2d\u306e\u307f\u5229\u7528\u3055\u308c\u308b\u4e8b\u52d9\u5ba4', '\u65e5\u4e2d\u306e\u307f\u5229\u7528\u3055\u308c\u308b\u5eca\u4e0b', '\u65e5\u4e2d\u306e\u307f\u5229\u7528\u3055\u308c\u308b\u30ed\u30d3\u30fc', '\u65e5\u4e2d\u306e\u307f\u5229\u7528\u3055\u308c\u308b\u5171\u7528\u90e8\u306e\u4fbf\u6240', '\u65e5\u4e2d\u306e\u307f\u5229\u7528\u3055\u308c\u308b\u55ab\u7159\u5ba4', '\u53a8\u623f', '\u5c4b\u5185\u99d0\u8eca\u5834', '\u6a5f\u68b0\u5ba4', '\u96fb\u6c17\u5ba4', '\u6e6f\u6cb8\u5ba4\u7b49', '\u98df\u54c1\u5eab\u7b49', '\u5370\u5237\u5ba4\u7b49', '\u5ec3\u68c4\u7269\u4fdd\u7ba1\u5834\u6240\u7b49', '\u975e\u4e3b\u8981\u5ba4']</code>  <code>module-attribute</code>","text":"<p>room type options for hotel.</p>"},{"location":"reference/truzt/webpro_options/#truzt.webpro_options.RoomTypeOffice","title":"<code>RoomTypeOffice = Literal['\u4e8b\u52d9\u5ba4', '\u96fb\u5b50\u8a08\u7b97\u6a5f\u5668\u4e8b\u52d9\u5ba4', '\u4f1a\u8b70\u5ba4', '\u55ab\u8336\u5ba4', '\u793e\u54e1\u98df\u5802', '\u4e2d\u592e\u76e3\u8996\u5ba4', '\u66f4\u8863\u5ba4\u53c8\u306f\u5009\u5eab', '\u5eca\u4e0b', '\u30ed\u30d3\u30fc', '\u4fbf\u6240', '\u55ab\u7159\u5ba4', '\u53a8\u623f', '\u5c4b\u5185\u99d0\u8eca\u5834', '\u6a5f\u68b0\u5ba4', '\u96fb\u6c17\u5ba4', '\u6e6f\u6cb8\u5ba4\u7b49', '\u98df\u54c1\u5eab\u7b49', '\u5370\u5237\u5ba4\u7b49', '\u5ec3\u68c4\u7269\u4fdd\u7ba1\u5834\u6240\u7b49', '\u975e\u4e3b\u8981\u5ba4']</code>  <code>module-attribute</code>","text":"<p>room type options for office.</p>"},{"location":"reference/truzt/webpro_options/#truzt.webpro_options.RoomTypeResidentialComplex","title":"<code>RoomTypeResidentialComplex = Literal['\u5c4b\u5185\u5eca\u4e0b', '\u30ed\u30d3\u30fc', '\u7ba1\u7406\u4eba\u5ba4', '\u96c6\u4f1a\u5ba4', '\u5c4b\u5916\u5eca\u4e0b', '\u5c4b\u5185\u99d0\u8eca\u5834', '\u6a5f\u68b0\u5ba4', '\u96fb\u6c17\u5ba4', '\u5ec3\u68c4\u7269\u4fdd\u7ba1\u5834\u6240\u7b49']</code>  <code>module-attribute</code>","text":"<p>room type options for residential complex.</p>"},{"location":"reference/truzt/webpro_options/#truzt.webpro_options.RoomTypeRestaurant","title":"<code>RoomTypeRestaurant = Literal['\u30ec\u30b9\u30c8\u30e9\u30f3\u306e\u5ba2\u5ba4', '\u8efd\u98df\u5e97\u306e\u5ba2\u5ba4', '\u55ab\u8336\u5e97\u306e\u5ba2\u5ba4', '\u30d0\u30fc', '\u30d5\u30ed\u30f3\u30c8', '\u4e8b\u52d9\u5ba4', '\u66f4\u8863\u5ba4\u53c8\u306f\u5009\u5eab', '\u5eca\u4e0b', '\u30ed\u30d3\u30fc', '\u4fbf\u6240', '\u55ab\u7159\u5ba4', '\u53a8\u623f', '\u5c4b\u5185\u99d0\u8eca\u5834', '\u6a5f\u68b0\u5ba4', '\u96fb\u6c17\u5ba4', '\u6e6f\u6cb8\u5ba4\u7b49', '\u98df\u54c1\u5eab\u7b49', '\u5370\u5237\u5ba4\u7b49', '\u5ec3\u68c4\u7269\u4fdd\u7ba1\u5834\u6240\u7b49', '\u975e\u4e3b\u8981\u5ba4']</code>  <code>module-attribute</code>","text":"<p>room type options for restaurant.</p>"},{"location":"reference/truzt/webpro_options/#truzt.webpro_options.RoomTypeSchool","title":"<code>RoomTypeSchool = Literal['\u5c0f\u4e2d\u5b66\u6821\u306e\u6559\u5ba4', '\u9ad8\u7b49\u5b66\u6821\u306e\u6559\u5ba4', '\u8077\u54e1\u5ba4', '\u5c0f\u4e2d\u5b66\u6821\u53c8\u306f\u9ad8\u7b49\u5b66\u6821\u306e\u98df\u5802', '\u5927\u5b66\u306e\u6559\u5ba4', '\u5927\u5b66\u306e\u98df\u5802', '\u4e8b\u52d9\u5ba4', '\u7814\u7a76\u5ba4', '\u96fb\u5b50\u8a08\u7b97\u6a5f\u5668\u6f14\u7fd2\u5ba4', '\u5b9f\u9a13\u5ba4', '\u5b9f\u7fd2\u5ba4', '\u8b1b\u5802\u53c8\u306f\u4f53\u80b2\u9928', '\u5bbf\u76f4\u5ba4', '\u66f4\u8863\u5ba4\u53c8\u306f\u5009\u5eab', '\u5eca\u4e0b', '\u30ed\u30d3\u30fc', '\u4fbf\u6240', '\u55ab\u7159\u5ba4', '\u53a8\u623f', '\u5c4b\u5185\u99d0\u8eca\u5834', '\u6a5f\u68b0\u5ba4', '\u96fb\u6c17\u5ba4', '\u6e6f\u6cb8\u5ba4\u7b49', '\u98df\u54c1\u5eab\u7b49', '\u5370\u5237\u5ba4\u7b49', '\u5ec3\u68c4\u7269\u4fdd\u7ba1\u5834\u6240\u7b49', '\u975e\u4e3b\u8981\u5ba4']</code>  <code>module-attribute</code>","text":"<p>room type options for school.</p>"},{"location":"reference/truzt/window_configure_model/","title":"window_configure_model","text":"<p>This module defines the WindowConfigure class.</p> <p>Classes:</p> Name Description <code>WindowConfigure</code> <p>A class representing the configuration of a window, including attributes such as area, dimensions, input method, frame type, glass properties, and additional information.</p>"},{"location":"reference/truzt/window_configure_model/#truzt.window_configure_model.WindowConfigure","title":"<code>WindowConfigure</code>","text":"<p>               Bases: <code>BaseConfigModel</code></p> <p>\u7a93\u4ed5\u69d8.</p> <p>Attributes:</p> Name Type Description <code>window_area</code> <code>Optional[float]</code> <p>\u7a93\u9762\u7a4d</p> <code>window_width</code> <code>Optional[float]</code> <p>\u7a93\u306e\u5e45</p> <code>window_height</code> <code>Optional[float]</code> <p>\u7a93\u306e\u9ad8\u3055</p> <code>input_method</code> <code>Optional[Literal['\u6027\u80fd\u5024\u3092\u5165\u529b', '\u30ac\u30e9\u30b9\u306e\u6027\u80fd\u3092\u5165\u529b', '\u30ac\u30e9\u30b9\u306e\u7a2e\u985e\u3092\u5165\u529b']]</code> <p>\u7a93\u6027\u80fd\u306e\u5165\u529b\u65b9\u6cd5</p> <code>frame_type</code> <code>Optional[Literal['\u6a39\u8102\u88fd', '\u6728\u88fd', '\u91d1\u5c5e\u6a39\u8102\u8907\u5408\u88fd', '\u91d1\u5c5e\u6728\u8907\u5408\u88fd', '\u91d1\u5c5e\u88fd']]</code> <p>\u5efa\u5177\u306e\u7a2e\u985e</p> <code>glass_id</code> <code>Optional[str]</code> <p>\u30ac\u30e9\u30b9\u5efa\u7bc9\u78ba\u8a8d\u8a18\u53f7</p> <code>layer_type</code> <code>Optional[Literal['\u8907\u5c64', '\u5358\u5c64']]</code> <p>\u30ac\u30e9\u30b9\u306e\u5c64\u6570</p> <code>glass_uvalue</code> <code>Optional[float]</code> <p>\u30ac\u30e9\u30b9\u306e\u71b1\u8cab\u6d41\u7387</p> <code>glass_ivalue</code> <code>Optional[float]</code> <p>\u30ac\u30e9\u30b9\u306e\u65e5\u5c04\u71b1\u53d6\u5f97\u7387</p> <code>window_uvalue</code> <code>Optional[float]</code> <p>\u7a93\u306e\u71b1\u8cab\u6d41\u7387</p> <code>window_ivalue</code> <code>Optional[float]</code> <p>\u7a93\u306e\u65e5\u5c04\u71b1\u53d6\u5f97\u7387</p> <code>info</code> <code>Optional[str]</code> <p>\u5099\u8003</p> Source code in <code>truzt/window_configure_model.py</code> <pre><code>class WindowConfigure(BaseConfigModel):\n    \"\"\"\u7a93\u4ed5\u69d8.\n\n    Attributes:\n        window_area: \u7a93\u9762\u7a4d\n        window_width: \u7a93\u306e\u5e45\n        window_height: \u7a93\u306e\u9ad8\u3055\n        input_method: \u7a93\u6027\u80fd\u306e\u5165\u529b\u65b9\u6cd5\n        frame_type: \u5efa\u5177\u306e\u7a2e\u985e\n        glass_id: \u30ac\u30e9\u30b9\u5efa\u7bc9\u78ba\u8a8d\u8a18\u53f7\n        layer_type: \u30ac\u30e9\u30b9\u306e\u5c64\u6570\n        glass_uvalue: \u30ac\u30e9\u30b9\u306e\u71b1\u8cab\u6d41\u7387\n        glass_ivalue: \u30ac\u30e9\u30b9\u306e\u65e5\u5c04\u71b1\u53d6\u5f97\u7387\n        window_uvalue: \u7a93\u306e\u71b1\u8cab\u6d41\u7387\n        window_ivalue: \u7a93\u306e\u65e5\u5c04\u71b1\u53d6\u5f97\u7387\n        info: \u5099\u8003\n    \"\"\"\n\n    # NOTE: builelib\u3067\u3053\u3053\u3060\u3051camelCase\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u305d\u306e\u5bfe\u5fdc\n    model_config = ConfigDict(alias_generator=to_camel)\n\n    window_area: Optional[float] = Field(\n        None,\n        ge=0.0,\n    )\n    window_width: Optional[float] = Field(\n        None,\n        ge=0.0,\n    )\n    window_height: Optional[float] = Field(\n        None,\n        ge=0.0,\n    )\n    input_method: Optional[\n        Literal[\n            \"\u6027\u80fd\u5024\u3092\u5165\u529b\",\n            \"\u30ac\u30e9\u30b9\u306e\u6027\u80fd\u3092\u5165\u529b\",\n            \"\u30ac\u30e9\u30b9\u306e\u7a2e\u985e\u3092\u5165\u529b\",\n        ]\n    ] = Field(\n        None,\n    )\n    frame_type: Optional[\n        Literal[\n            \"\u6a39\u8102\u88fd\",\n            \"\u6728\u88fd\",\n            \"\u91d1\u5c5e\u6a39\u8102\u8907\u5408\u88fd\",\n            \"\u91d1\u5c5e\u6728\u8907\u5408\u88fd\",\n            \"\u91d1\u5c5e\u88fd\",\n        ]\n    ] = Field(\n        None,\n    )\n    glass_id: Optional[str] = Field(\n        None,\n        alias=\"glassID\",  # NOTE: for builelib compatibility\n    )\n    layer_type: Optional[Literal[\"\u8907\u5c64\", \"\u5358\u5c64\"]] = Field(\n        None,\n        alias=\"layerType\",  # NOTE: for builelib compatibility\n    )\n    glass_uvalue: Optional[float] = Field(\n        None,\n        ge=0.0,\n    )\n    glass_ivalue: Optional[float] = Field(\n        None,\n        ge=0.0,\n    )\n    window_uvalue: Optional[float] = Field(\n        None,\n        ge=0.0,\n    )\n    window_ivalue: Optional[float] = Field(\n        None,\n        ge=0.0,\n    )\n    info: Optional[str] = Field(\n        None,\n        alias=\"Info\",  # NOTE: for builelib compatibility\n    )\n</code></pre>"}]}